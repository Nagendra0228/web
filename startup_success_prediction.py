{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.6.0","file_extension":".r","codemirror_mode":"r"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":821159,"sourceType":"datasetVersion","datasetId":432357}],"dockerImageVersionId":30139,"isInternetEnabled":true,"language":"r","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code]\n---\ntitle: \"Introduction\"\noutput: \n    html_document:\n        code_folding: hide\n---\n\n\nThis project aims to 1) investigate **which features** have had, over time, a **positive impact** on the growth and success of startups and it what extent they have determined it and 2) to **predict** the startup **success/failure** based on its current data.  \n\nThe study is divided into the following steps: \n    \n1. **Data wrangling & Data cleansing**, aimed at merging the tables, remove missing values, and ricombine data in more informating tables\n2. **Exploratory Data Analysis**, in which we will have a general view of the data and the relations between variables \n3. **Feature Engeneering**, in which new more explanatory variables will be created\n4. **Feature Selection**, aimed at obtaining a unique dataset on which models will be built\n5. **Data modelling**, in which are used a Multinomial Logit and a Random Forest to predict the dependent variable \n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(\n  echo = TRUE,\n\tmessage = FALSE,\n\twarning = FALSE,\n\tinclude = TRUE)\n```\n\n\n```{r libraries, include = TRUE}\nlibrary(tidyverse) \nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(ggpubr)\nlibrary(questionr) \nlibrary(leaflet) \nlibrary(pROC) \nlibrary(randomForest)\n```\n\n# Data wrangling\n\nFirst of all, we are going to download each table and we select only a subset of variabiles which will be useful in our analysis.\n\n```{r Tables download and formatting}\n\n\n# ACQUISITIONS -------------------------------------------------------\n\n# Contains information about startups that have been bought\nacquisitions <- read.csv(\"../input/startup-investments/acquisitions.csv\")\n\nacquisitions <- acquisitions %>%\n  select(-id, -acquisition_id, -created_at, -updated_at, \n         -source_url, -source_description)  %>%    \n  mutate(term_code = factor(term_code), \n         price_currency_code = factor(price_currency_code), \n         acquired_at = as.Date(acquired_at)) %>% \n  distinct()\n\n# FUNDING_ROUNDS -----------------------------------------------------\n\n# Information about the startup funding rounds\nfunding_rounds <- read.csv(\"../input/startup-investments/funding_rounds.csv\")\n\nfunding_rounds <- funding_rounds %>%      \n  select(-id, -created_at, -updated_at, -created_by, \n         -raised_amount, -raised_currency_code, -pre_money_valuation, -post_money_valuation_usd,\n         -pre_money_currency_code, -post_money_valuation, -pre_money_valuation_usd, \n         -post_money_currency_code, -source_url) %>% \n  mutate(funded_at = as.Date(funded_at), \n         funding_round_type = factor(funding_round_type),\n         funding_round_code = factor(funding_round_code), \n         is_first_round = factor(is_first_round),\n         is_last_round = factor(is_last_round)) \n\nfunding_rounds$funding_round_type[which(funding_rounds$funding_round_code == \"angel\" & \n                                          funding_rounds$funding_round_type == \"series-a\")]  <- \"angel\" \n\nfunding_rounds$funding_round_type[which(funding_rounds$funding_round_code == \"seed\" & \n                                          funding_rounds$funding_round_type == \"series-a\")]  <- \"angel\"\n\n\n# FUNDS ----------------------------------------------------------------\n\n# Contains data on the venture capital funds that make investments\nfunds <- read.csv(\"../input/startup-investments/funds.csv\")\n\nfunds <- funds %>%                       \n  select(-id, -created_at, -updated_at, -source_url, \n         -source_description)  %>%\n  mutate(funded_at = as.Date(funded_at), \n         raised_currency_code = factor(raised_currency_code))%>%\n  distinct()\n\n\n# INVESTMENTS ---------------------------------------------------------------\n\n# Contains data on the various different investments made by venture capitalists.\ninvestments <- read.csv(\"../input/startup-investments/investments.csv\")\n\ninvestments <- investments %>%           \n  select(-id, -created_at, -updated_at) %>%\n  distinct()\n\n# IPOS -----------------------------------------------------------------------------\n\n# Contains information about initial public offers\nipos <- read.csv(\"../input/startup-investments/ipos.csv\")\n\nipos <- ipos %>%                         \n  select(-id, -created_at, -updated_at, -stock_symbol,\n         -source_url, -source_description) %>% \n  mutate(valuation_currency_code = factor(valuation_currency_code), \n         raised_currency_code = factor(raised_currency_code),\n         public_at = as.Date(public_at)) %>%\n  distinct()\n\n# MILESTONES ----------------------------------------------------------------------\n\n# Contains significant events within the startup ecosystem\nmilestones <- read.csv(\"../input/startup-investments/milestones.csv\")\n\nmilestones <- milestones %>%             \n  select(-id, -created_at, -updated_at, -source_url, -milestone_code) %>%\n  mutate(milestone_at = as.Date(milestone_at)) %>%\n  distinct()\n\n# OBJECTS -----------------------------------------------------------------------------\n\n# Main file containing base information\nobjects <- read.csv(\"../input/startup-investments/objects.csv\")\n\nobjects <- objects %>%                    \n  select(-normalized_name, -permalink,  \n         -created_at, -updated_at ,-first_investment_at,\n         -last_investment_at, -created_by, -permalink, -domain, \n         -twitter_username, -logo_url, -overview)  %>%  \n  mutate(founded_at = as.Date(founded_at),\n         logo_width = as.numeric(logo_width), \n         logo_height = as.numeric(logo_height), \n         country_code = factor(country_code), \n         state_code = factor(state_code), \n         investment_rounds = as.integer(investment_rounds), \n         invested_companies = as.integer(invested_companies), \n         first_funding_at = as.Date(first_funding_at), \n         last_funding_at = as.Date(last_funding_at), \n         funding_rounds = as.integer(funding_rounds), \n         funding_total_usd = as.numeric(funding_total_usd), \n         first_milestone_at = as.Date(first_milestone_at), \n         milestones = as.integer(milestones), \n         relationships = as.numeric(relationships))    \n\n\n# OFFICES ---------------------------------------------------------------------------\n\n# Contains information about startup company offices\noffices <- read.csv(\"../input/startup-investments/offices.csv\")\n\noffices <- offices %>%                  \n  select(-id, -zip_code, -created_at, -updated_at)   %>%\n  mutate(state_code = factor(state_code)) %>%\n  distinct()\n\n\n# PEOPLE -----------------------------------------------------------------------------\n\n# Contains information about individuals in the startup world\npeople <- read.csv(\"../input/startup-investments/people.csv\")\n\npeople <- people %>%\n  select(-id) %>% distinct()\n\n\n# RELATIONSHIPS ---------------------------------------------------------------------\n\n# Contains relationship data that links companies to individuals and their positions \n# a company\nrelationships <- read.csv(\"../input/startup-investments/relationships.csv\")\n\nrelationships <- relationships %>%\n  select(-id, -sequence, -created_at, -updated_at)  %>%\n  mutate(is_past = factor(is_past)) %>% distinct()\n\n```\n\n\n```{r Subsetting entit√† principali da objects}\n\n\nSTARTUPS <- objects %>%                 \n  filter(entity_type == \"Company\", status !=\"\", country_code!=\"CSS\", \n         country_code!=\"FST\") %>%    \n  select(-entity_id) %>% distinct()\n  \nFINANCIAL_ORG <- objects %>%            \n  filter(entity_type == \"FinancialOrg\")  %>%\n  select(-closed_at, -entity_id, -parent_id, -category_code, \n         -status, -funding_rounds, -funding_total_usd, \n         -first_funding_at, -last_funding_at, -milestones, \n         -last_milestone_at, -first_milestone_at)    \n\nProduct <- objects %>%                 \n  filter(entity_type == \"Product\") %>%\n  select(-region, -entity_type, -investment_rounds, -invested_companies, \n         -funding_rounds, -first_funding_at, -last_funding_at, \n         -funding_total_usd, -relationships) \n\nPerson <- objects %>%                   \n  filter(entity_type == \"Person\")       \n\n```\n\n## General features of the dataset\n\nThe database is composed by **6 datasets** containing many aspect related to the startup world from `r min(STARTUPS$founded_at, na.rm = TRUE)` to `r max(STARTUPS$founded_at, na.rm = TRUE) `. \n\nThese 6 dataset are:\n\n- **Acquisition**: informations related to acquisitions (acquired company, acquiring company, price and date of acquisition, payment method)\n- **Founding Rounds**: informations related to the individual funding rounds (funded company, date and funding type, total raised amount, number of participants)\n- **Investments**: contains the ID both of the funded company and the investor. \n- **Objects**: main dataset containing basic informations on individual entity in the database. It contains 40 variables, of which the  most important are *name*, *entity_type*, *category_code*, *status*, *founded_at*, *country_code*, *state_code*, *investment_rounds*, *invested_companies*, *funding_rounds* e *funding_total_usd*. \n- **Offices**: geographic position of main offices (both of the companies and the investment funds).\n- **Relationships**: informations related to relationships between people and institutions (people, institutions, start and end date of relationship, role held)\n\n\n```{r construzione dataset finale unico}\n\nfinale <- merge(STARTUPS, ipos, by.y=\"object_id\",by.x = \"id\", all.x = TRUE) %>%\n  select(-homepage_url,-parent_id, -entity_type,  -short_description, -description,\n         -tag_list, -valuation_amount, -valuation_currency_code, -raised_amount,\n         -public_at,-parent_id, -raised_currency_code, -ipo_id)   \n\nrounds <- merge(finale, funding_rounds, by.x=\"id\", by.y=\"object_id\", all.x = TRUE) %>%\n  select(id, funded_at, funding_round_id, funding_round_type,  raised_amount_usd)  %>% \n  filter(!is.na(funding_round_type)) %>% \n  group_by(id) %>% \n  summarise(angel = sum(raised_amount_usd[funding_round_type == \"angel\"]),\n            crowdfunding = sum(raised_amount_usd[funding_round_type == \"crowdfunding\"]), \n            other = sum(raised_amount_usd[funding_round_type == \"other\"]), \n            post_ipo = sum(raised_amount_usd[funding_round_type == \"post-ipo\"]),\n            private_equity = sum(raised_amount_usd[funding_round_type == \"private_equity\"]), \n            series_a = sum(raised_amount_usd[funding_round_type == \"series-a\"]), \n            series_b = sum(raised_amount_usd[funding_round_type == \"series-b\"]), \n            series_c = sum(raised_amount_usd[funding_round_type == \"series-c+\"]),\n            venture = sum(raised_amount_usd[funding_round_type == \"venture\"])) \n\nfinale <- merge(finale, rounds, by=\"id\", all.x = TRUE)  \n\nt <- acquisitions %>%\n  group_by(acquiring_object_id) %>%\n  summarise(num_acquisizioni_effettuate=n()) \n\nfinale <- merge(finale, t, by.x=\"id\", by.y = \"acquiring_object_id\", \n                   all.x = TRUE) \n\nfinale$num_acquisizioni_effettuate[which(is.na(finale$num_acquisizioni_effettuate))] <- 0\n\n\nt <-  acquisitions %>%                  # have_been_acquired (0 1)\n  group_by(acquired_object_id) %>%   \n  mutate(have_been_acquired = 1) %>%\n  select(acquired_object_id, have_been_acquired)\n\nfinale <- merge(finale, t, by.x = \"id\", by.y = \"acquired_object_id\", all.x = TRUE) \nfinale$have_been_acquired[which(is.na(finale$have_been_acquired))] <- 0\n\n\nt <- merge(investments, FINANCIAL_ORG, by.x=\"investor_object_id\", by.y=\"id\")  %>%    #  fin_org_financed (0 1)\n  select(funded_object_id, investor_object_id)   %>%\n  group_by(funded_object_id)  %>%\n  summarise(n=n())  %>%\n  mutate(fin_org_financed=1)\n\nfinale <- merge(finale, t, by.x=\"id\", by.y=\"funded_object_id\", all.x=TRUE)  %>%\n  select(-n) \nfinale$fin_org_financed[is.na(finale$fin_org_financed)] <- 0\n\n\nt <- merge(investments, Person, by.x=\"investor_object_id\", by.y=\"id\")  %>%    # person_financed (0 1)\n  select(funded_object_id, investor_object_id)   %>%\n  group_by(funded_object_id)  %>%\n  summarise(n=n())  %>%\n  mutate(person_financed=1)\n\nfinale <- merge(finale, t, by.x=\"id\", by.y=\"funded_object_id\", all.x=TRUE)  %>%\n  select(-n) \nfinale$person_financed[is.na(finale$person_financed)] <- 0\n\n\n\nt <- merge(investments, STARTUPS, by.x=\"investor_object_id\", by.y=\"id\")  %>%    #  startup_financed (0 1)\n  select(funded_object_id, investor_object_id)   %>%\n  group_by(funded_object_id)  %>%\n  summarise(n=n())  %>%\n  mutate(startup_financed=1)\n\nfinale <- merge(finale, t, by.x=\"id\", by.y=\"funded_object_id\", all.x=TRUE)  %>%\n  select(-n) \nfinale$startup_financed[is.na(finale$startup_financed)] <- 0\n\n\n\nt <- Product  %>%         #  num_prodotti \n  group_by(parent_id)  %>%\n  summarise(num_prodotti = n())    %>%\n  filter(parent_id!=\"\") \n\nfinale <- merge(finale, t, by.x=\"id\", by.y = \"parent_id\", all.x = TRUE) \nfinale$num_prodotti[is.na(finale$num_prodotti)] <- 0\n\n\nfinale <- finale %>%\n  select(-first_milestone_at, -last_milestone_at, -last_funding_at, \n         -first_funding_at, -name, -city, -region, -have_been_acquired, -closed_at, -state_code)\n\nfinale <- finale %>% distinct()   \n\n# formatting\nfinale <- finale %>%\n  mutate(category_code = factor(category_code), \n        status = factor(status), \n        country_code = factor(country_code),\n        fin_org_financed=factor(fin_org_financed),\n        person_financed = factor(person_financed), \n        startup_financed = factor(startup_financed))\n\n```\n\n\n\\ \n\n# Exploratory Data Analysis\n\n### Dependent variable: Status\n\nThe **dependent variabile** is a categorial one, made up of 4 non-orderable levels, indicating the **STATUS** of each startup. \nThese levels are: \n    \n- **CLOSED** : failed startup\n- **ACQUIRED** : acquired startup\n- **IPO** : listed startup\n- **OPERATING** : startup not acquired or listed\n\nThe following table shows the frequency distribution of STATUS variable:\n\n```{r,include=TRUE, fig.height=2, fig.width=5}\nggtexttable(as.matrix(rbind(table(STARTUPS$status))), theme = ttheme(\"mOrange\"))\n\n```\n\nOne can immediately notice that the number of listed and acquired startups is very low, while most of them are *operating*. \n\n## Market sector\n\n**Category_code** is a categorial variable made up of `r length(table(STARTUPS$category_code[STARTUPS$category_code!=\"\"]))` non-orderable variables, which indicates the market segment in which the company operates.\n\n```{r}\nstatus_settore <- STARTUPS  %>%\n  group_by(category_code)  %>%\n  filter(category_code!=\"\")%>%\n  summarise(n_acquired=sum(status==\"acquired\"),\n            n_closed=sum(status==\"closed\"), n_ipo=sum(status==\"ipo\"),\n            n_ipo_acquired=sum(status==\"ipo&acquired\"), \n            n_operating=sum(status==\"operating\"), \n            avg_milestones=mean(milestones, na.rm = TRUE), \n            n=n()) %>%\n  mutate(acquired_rate=n_acquired/n, closed_rate=n_closed/n,\n         ipo_rate=n_ipo/n, ipo_acquired_rate=n_ipo_acquired/n,\n         operating_rate=n_operating/n)%>%\n  arrange(desc(ipo_rate))\n```\n\nThe frequency distribution of the startups for the different sectors is showed below:\n\n```{r, include = TRUE, fig.height=4, fig.width=8}\na <- within(status_settore, category_code <- factor(category_code, levels = category_code[order(n,  decreasing =TRUE)    ])) \n\nggplot(a[a$category_code!=\"other\",], aes(x=category_code, y=n)) + \n  geom_col() + \n  labs(x=\"\",y=\"Nuber of startups in the sector\") +\n  theme(axis.text.x = element_text(angle=90, vjust = 0.28)) \n\n```\n\n\n\n\n\nWe can notice that the most populated sectors are the ones regarding technology and digital.\n\nThe **software** sector dominates the others, with more than 50.000 startup in it, which is way far from the second position, the **web** sector, with \"only\" `r   status_settore$n[status_settore$category_code==\"web\"]` startups. Third, fourth and fifth position for **e-commerce**, **video games** and **mobile** sectors. \n\nIn order to have an idea on the influcence of the market segment on the future of the new companies, the percentage of closed, public, acquired and operating startups in each sector will be compared to each other. \n\n```{r, include=TRUE, fig.height=25, fig.width=18}\n\na <- within(status_settore, category_code <- factor(category_code, levels = category_code[order(ipo_rate,  decreasing =TRUE)    ]))\n\nuno <- ggplot(a, aes(x=category_code, y=ipo_rate)) +\n  geom_col() +\n  labs(x=\"\", y=\"\", title=\"Percentage of listed companies\") +\n  theme(axis.text.x = element_text(angle=90, vjust = 0.28, size=17), axis.text.y = element_text(size = 15), \n        plot.title = element_text(size=13))\n\na <- within(status_settore, category_code <- factor(category_code, levels = category_code[order(acquired_rate,  decreasing =TRUE)    ]))\ndue <- ggplot(a, aes(x=category_code, y=acquired_rate)) +\n  geom_col() +\n  labs(x=\"\", y=\"\",title=\"Percentage of acquired companies\") +\n  theme(axis.text.x = element_text(angle=90, vjust = 0.28, size=17), axis.text.y = element_text(size = 15), \n        plot.title = element_text(size=13))\n\na <- within(status_settore, category_code <- factor(category_code, levels = category_code[order(closed_rate,  decreasing =TRUE)    ]))\ntre <- ggplot(a, aes(x=category_code, y=closed_rate)) +\n  geom_col() +\n  labs(x=\"\",y=\"\", title=\"Percentage of closed companies\") +\n  theme(axis.text.x = element_text(angle=90, vjust = 0.28, size=17), axis.text.y = element_text(size = 15), \n        plot.title = element_text(size=13))\n\na <- within(status_settore, category_code <- factor(category_code, levels = category_code[order(operating_rate,  decreasing =TRUE)    ]))\nquattro <- ggplot(a, aes(x=category_code, y=operating_rate)) +\n  geom_col() +\n  labs(x=\"\",y=\"\",title=\"Percentage of operating companies\") +\n  theme(axis.text.x = element_text(angle=90, vjust = 0.28, size=17), axis.text.y = element_text(size = 15), \n        plot.title = element_text(size=13))\n\nggarrange(uno, due, tre, quattro, ncol = 1, nrow = 4)\n```\n\nWe can notice that most of the companies are operating; indeed, in almost all sectors the rate of operating companies/total companies is about 1. \n\nThe **semiconductor** sector has the hishest IPO rate and acquisitions rate, and the lowest operating rate. In the **biotechnology** field, a lot of startups reach IPO and/or got acquired as well.    \n\nThe different values of these percentages in the different sectors are a clear indicator that the market segment to which the startup belong, **could have an impact** on its failure/success. \n\n\\\n\n### Geographic position\n\n**Country_code** is a categorial variable with `r STARTUPS %>% filter(country_code!=\"\") %>% group_by(country_code) %>% summarise(n()) %>% nrow()` levels, each of which indicates the country in which each startup was founded.\n\nThe following map shows the headquarters positions of about 80.000 startups (the other ones had missing values for latitude and/or longitude):\n\n```{r, include=TRUE}\nuffici_mappe <- merge(STARTUPS, offices, by.x=\"id\", by.y=\"object_id\", all.x=TRUE) %>%\n  select(status, longitude, latitude)\n\npal <- colorFactor(c(\"yellow\", \"#000000\", \"red\", \"blue\"), domain = c(\"ipo\", \"closed\", \"operating\", \"acquired\"))\n\ndimensioni <- rep(0, nrow(uffici_mappe))\n\nfor (c in 1:nrow(uffici_mappe)){\n  if (uffici_mappe$status[c]==\"operating\"){\n    dimensioni[c] <- 100\n  }else if(uffici_mappe$status[c]==\"closed\"){\n    dimensioni[c] <- 2000\n  }else if(uffici_mappe$status[c]==\"acquired\"){\n    dimensioni[c] <- 50000\n  }else{\n    dimensioni[c] <- 100000\n  }\n}\n\n\nleaflet(data=uffici_mappe)  %>% \n  setView(lng=10, lat=10, zoom=2)  %>%\n  addProviderTiles(\"Esri.WorldStreetMap\")  %>%\n  addCircles(color = ~pal(status), stroke = FALSE, radius =  dimensioni, fillOpacity = 1)  %>%\n  addLegend(position=\"bottomright\", pal=pal, values=~status)\n```\n\nThe majority of them are in **Europe** and **United States**. Let's have a look at these two areas:\n\n```{r, include = TRUE}\ndimensioni <- rep(0, nrow(uffici_mappe))\n\nfor (c in 1:nrow(uffici_mappe)){\n  if (uffici_mappe$status[c]==\"operating\"){\n    dimensioni[c] <- 100\n  }else if(uffici_mappe$status[c]==\"closed\"){\n    dimensioni[c] <- 20000\n  }else if(uffici_mappe$status[c]==\"acquired\"){\n    dimensioni[c] <- 30000\n  }else{\n    dimensioni[c] <- 50000\n  }\n}\n\nleaflet(data=uffici_mappe)  %>% \n  setView(lng=-95, lat=35, zoom=3.5)  %>%\n  addProviderTiles(\"Esri.WorldStreetMap\")  %>%\n  addCircles(color = ~pal(status), stroke = FALSE, radius =  dimensioni, fillOpacity = 0.8)  %>%\n  addLegend(position=\"bottomright\", pal=pal, values=~status)\n```\n\n\n```{r, include = TRUE}\ndimensioni <- rep(0, nrow(uffici_mappe))\n\nfor (c in 1:nrow(uffici_mappe)){\n  if (uffici_mappe$status[c]==\"operating\"){\n    dimensioni[c] <- 100\n  }else if(uffici_mappe$status[c]==\"closed\"){\n    dimensioni[c] <- 20000\n  }else if(uffici_mappe$status[c]==\"acquired\"){\n    dimensioni[c] <- 30000\n  }else{\n    dimensioni[c] <- 50000\n  }\n}\n\nleaflet(data=uffici_mappe)  %>% \n  setView(lng=10, lat=45, zoom=3.8)  %>%\n  addProviderTiles(\"Esri.WorldStreetMap\")  %>%\n  addCircles(color = ~pal(status), stroke = FALSE, radius =  dimensioni, fillOpacity = 0.8)  %>%\n  addLegend(position=\"bottomright\", pal=pal, values=~status)\n\n#ggpubr::ggarrange(america, europa, ncol=2)\n```\n\nThe \"densest\" areas are **New York**, **Boston**, **Washington** (east coast), the **Silicon Valley** and **Los Angeles** (west coast). Cities like **Denver**, **Atlanta**, **Dallas** follows. \n\n```{r}\nstatus_paese <- STARTUPS %>%\n  group_by(country_code) %>%\n  summarise(n=n(), n_ipo=sum(status==\"ipo\"),\n            n_operating=sum(status==\"operating\"),\n            n_closed=sum(status==\"closed\"),\n            n_acquired=sum(status==\"acquired\")) %>%\n  mutate(ipo_rate=n_ipo/n*100, acquired_rate=n_acquired/n*100, \n         closed_rate=n_closed/n*100, operating_rate=n_operating/n*100) %>%\n  arrange(desc(n))  %>% filter(country_code !=\"\")  \n\n```\n\n\n\n#### Percentage of companies listed on the stock exchange\n\n```{r, include = TRUE , fig.width=10, fig.height=3}\nuno <- ggtexttable(round(summary(status_paese$ipo_rate),3), rows = names(summary(status_paese$ipo_rate)), theme = ttheme(\"mOrange\"))\n\ndue <- ggplot(status_paese, aes(x=ipo_rate)) + \n  geom_boxplot() + \n  labs(title = \"IPO rate distribution\", x=\"IPO rate\")\n\nuno <- ggarrange(uno, due, ncol = 2, nrow = 1)\n\nmin_ipo_rate <- status_settore$ipo_rate[which.min(status_paese$ipo_rate[status_paese$ipo_rate!=0])]\n\na <- status_paese %>%\n  filter(ipo_rate!=0 & ipo_rate!=\"\") \n\na <- within(a, country_code <- factor(country_code, levels=country_code[order(ipo_rate, decreasing = TRUE)]))\n  \ndue <- ggplot(a,\n       aes(x=country_code, y=c(ipo_rate))) + \n  geom_col() + \n  ylab(\"IPO rate\") +\n  xlab(\"Countries\") +  labs(title=\"Countries with IPO rate greater than 0\") +\n  theme(axis.text.x = element_text(angle=90, size = 10, vjust = 0.3)) \n\nggarrange(uno, due, ncol=2, nrow = 1) \n\n```\n\n`r round(sum(status_paese$ipo_rate < min_ipo_rate)/nrow(status_paese), 2)*100` % of countries have 0 listed startup, while only `r sum(status_paese$ipo_rate!=0 & status_paese$ipo_rate!=\"\")` countries have a number of listed companies greater than 0. The plot on the right shows which are these countries. \n\nThe only two countries to have more than 4% of listed companies are **China** and **Taiwan**. **Israel** and **Japan** repost a value slightly higher than 2%, while **USA**, **Korea**, **Norway** and **Switzerland** exceed 1% but stay under 2%. **Czech Republic** has the higher rate among countries with a rate lower than 1%.   \n\nThe countries which are not included in the above plot have 0 listed startups. That means no startup founded in these countries is listed. \n\nThese value does not say much about the probability of success of a startup in a particular country. Indeed, there is a difference between a country having only 1 startup, not listed, and a country with 50 startups, none of which is listed on the stock exchange. \n\nFor that reason, we analyze the number of startups founded in countries with no listed companies.\n\n```{r, include = TRUE, fig.width=10, fig.height=2}\n\nssp <- round(summary(status_paese$n[status_paese$n_ipo==0]),4)\n\nssp <- rbind(ssp)\n\n\nssp.p <- ggtexttable(ssp, cols=names(summary(status_paese$n[status_paese$n_ipo==0])),\n                        theme = ttheme(\"mOrange\"), rows = NULL)\n\n\nssp1 <- ggplot(status_paese[status_paese$n_ipo==0,],aes(x=n)) + \n  geom_boxplot() + labs(x=\"\")\n\nggarrange(ssp.p, ssp1, ncol=2, nrow = 1)\n```\n\n50% of these countries have not had more than `r summary(status_paese$n[status_paese$n_ipo==0])[[3]]` startup founded on their territory. \n\n```{r companies with more than 125 startups (not listed), include = TRUE}\nn_alto_zero_ipo <- status_paese %>%\n  filter(n_ipo==0, n>125) %>% \n  arrange(desc(n))\n\nn_alto_zero_ipo\n```\n\nThe fact that many startups have been founded in a country but that none of them are listed on the stock exchange can mean that the country concerned is a **difficult territory** to develop this type of business, or that the legislation and the bureaucracy in force make the process of listing on the stock exchange difficult and slow, but also that the startups in these countries have been recently founded and have not had yet the time to mature, especially for countries with a high rate of companies which are still operating.\n\nAmong the countries with **more than 125 startups**, none of which are IPOs, we analyse the proportion of operating, closed and acquired companies out of the total number of companies in each country:\n\n```{r, include = TRUE, fig.width=8}\n\n# data preparation ------------------------------------------------------------------------\ncountry_code <- c(rep(\"ESP\", 813), rep(\"IRL\", 783), rep(\"BRA\", 390), rep(\"DNK\", 271), rep(\"BEL\", 271),\n  rep(\"TUR\", 278), rep(\"POL\", 261), rep(\"ZAF\", 197), rep(\"HKG\", 197), rep(\"AUT\", 166), \n  rep(\"NZL\", 153), rep(\"PRT\", 157), rep(\"UKR\", 146), rep(\"ARE\", 138), rep(\"ROM\", 143), \n  rep(\"ESP\", 22), rep(\"IRL\", 14), rep(\"BRA\", 9), rep(\"DNK\", 11), rep(\"BEL\", 7), \n  rep(\"POL\", 2), rep(\"ZAF\", 4), rep(\"HKG\", 5), rep(\"AUT\", 2), rep(\"NZL\", 6), rep(\"PRT\", 1),\n  rep(\"ARE\", 3), rep(\"ROM\", 1), rep(\"ESP\", 27), rep(\"IRL\", 23), rep(\"BRA\", 15), rep(\"DNK\", 18),\n  rep(\"BEL\", 14), rep(\"TUR\", 2), rep(\"POL\", 5), rep(\"ZAF\", 15), rep(\"HKG\", 5), rep(\"AUT\", 12),\n  rep(\"NZL\", 6), rep(\"PRT\", 4), rep(\"ARE\", 3))\nstatus  <- c(rep(\"operating\", 4323), rep(\"closed\", 87), rep(\"acquired\", 149) )  \ndata <- as_tibble(cbind(country_code, status))\ndata <- within(data, country_code <- factor(country_code, \n                                      levels=names(sort(table(country_code), \n                                                        decreasing=TRUE))))\n\n# plot -------------------------------------------------------------------------------\nggplot(data, aes(x=country_code, y=..count.., fill = status)) + \n  geom_bar() +\n  guides(fill=guide_legend(title=\"stato\")) +\n  labs(title = \"Number of companies in countries with 0 IPOs\", subtitle = \"Only countries with more than 125 companies taken into account\", \n       y=\"Number of companies\", x=\"\") + \n  theme(axis.text.x = element_text(angle=0, size = 10, vjust = 0.3))\n```\n\nWe can notice that most of the startups are **still operating** in their countries, while a small part of them are closed or acquired. **Denmark** and **Belgium** have a good percentage of **acquired companies** (`r round(n_alto_zero_ipo$acquired_rate[n_alto_zero_ipo$country_code==\"DNK\"], 2)`% and `r round(n_alto_zero_ipo$acquired_rate[n_alto_zero_ipo$country_code==\"BEL\"], 2)`% ), while **Romania** has a very high percentage of **closed companies** (`r n_alto_zero_ipo$acquired_rate[n_alto_zero_ipo$country_code==\"ROM\"]`).\n\nFrom this analysis it can be said that probably the **geographic region of foundation** of a startup **has an impact** on its success/failure\n\n\\\n\n## Foundation date\n\nThe date on which the startup was founded, as well as indicating the seniority of it, places it in an **hisorical context**. Those two factors can be very impactfulin the success/failure of the company.\n\nThe following plots show the distribution of this feature, conditioned on the levels of *status*:\n\n```{r, include=TRUE, fig.width=18}\nr <- ggplot(STARTUPS[STARTUPS$status!=\"\",], aes(founded_at, ..density..)) + \n  geom_histogram(col = \"white\") + \n  geom_density(col = \"red\", size = 0.5, linetype = \"dashed\") +\n  facet_wrap(~status) + labs(x=\"Foundation date\", y=\"\") + theme(axis.text.x=element_text(size=20), axis.title.x = element_text(size=23))\n\nr1 <- ggplot(STARTUPS[STARTUPS$status!=\"\",], aes(x=status, y=founded_at)) + \n  geom_boxplot()  + labs(x=\"\", y=\"Foundation date\") +theme(axis.text.x=element_text(size=20), axis.text.y = element_text(size=18), axis.title.y = element_text(size=23))\n\nggarrange(r, r1, ncol=2, nrow = 1)\n```\n\n\n```{r , include=TRUE, include = FALSE}\nsummary(STARTUPS$founded_at[STARTUPS$status == \"ipo\"])\nsummary(STARTUPS$founded_at[STARTUPS$status == \"acquired\"]) \nsummary(STARTUPS$founded_at[STARTUPS$status == \"closed\"])\nsummary(STARTUPS$founded_at[STARTUPS$status == \"operating\"])\n\nsummary(STARTUPS$founded_at)\n```\n\nThe plots show that **listed** and **acquired** companies are **medianally older** than the closed or operating ones.\n\nListed companies have been founded in **periods which are very far to each other**, while the other ones are mainly concentrated in **particular time periods**. Indeed, the 50% of the data closest to the median range between 1st January 1984 and 1st January 2002 (18 years) for the listed companies, from 1st January 1998 to 5th June 2007 (about 9 years) for acquired companies, from 1st February 2006 to 1st October 2010 (about 4 years) for failed companies and from 1st January 2005 to 10th April 2011 (about 6 years) for the operating ones. \n\nThese considerations make us think that the foundation date **affects the probability of success** of a company (IPO or acquisition) or rather, given that the older startups tend to be listed on the stock exchange or acquired, and therefore the longer the time elapsed since founding, higher chances of success are.\n\n\\ \n\n\n\\ \n\n## Investment rounds\n\nThe discrete variable **investment_round** indicates the number of investment rounds in which the startup has participated. \n\n```{r, fig.width=7, include = TRUE}\n\nbox <- ggplot(STARTUPS, aes(y=investment_rounds, x=status)) +\n   labs(y=\"Investment round\", x=\"\")+\n  geom_boxplot() + \n  coord_flip() \n \n\n\nipos <- STARTUPS %>%\n  filter(!is.na(investment_rounds)&status==\"ipo\")\n\nipos <- rbind(round(summary(ipos$investment_rounds), 3))\n\nacquired <- STARTUPS %>%\n  filter(!is.na(investment_rounds)&status==\"acquired\") \n\nacquired <- rbind(round(summary(acquired$investment_rounds), 3))\n\n\nclosed <- STARTUPS %>%\n  filter(!is.na(investment_rounds)&status==\"closed\") \n\nclosed <- rbind(round(summary(closed$investment_rounds),3))\n\n\noperating <- STARTUPS %>%\n  filter(!is.na(investment_rounds)&status==\"operating\") \n\noperating <- rbind(round(summary(operating$investment_rounds),3))\n\n\n\nssp <- rbind(colnames(ipos), ipos, acquired, closed, operating)\nssp <- cbind(c(\"\",\"Ipo\",\"Acquired\",\"Closed\", \"Operating\"), ssp)\n\n\nssp.p <- ggtexttable(ssp, cols=NULL,\n                        theme = ttheme(\"mOrange\"))\n\n\n\nggarrange(box, ssp.p, ncol = 1, nrow = 2)\n```\n\n**`r round(sum(STARTUPS$investment_rounds==0, na.rm = TRUE)/nrow(STARTUPS)*100, 2)`%** of the startups in the database **have never participated** in an investment round, while only `r sum(STARTUPS$investment_rounds!=0, na.rm=TRUE)` (`r round(sum(STARTUPS$investment_rounds!=0, na.rm = TRUE)/nrow(STARTUPS)*100, 2)`%) observations report a value higher than 0. Futhermore, the distribution is strongly **positive skewed**. \n\nListed companies participate on average in a greater number of investment rounds, while bankrupt companies participate in a few rounds (maximum 3). Operating startups participate on average in fewer rounds than those in IPO, but the range is much greater than the latter, with observations reaching 478 investment rounds (against the maximum 37 of companies in IPO). In any case, the **main difference** in the distributions is in the **tails**. In fact, for all status values, 75% of the observations are equal to 0, but the right tail of *operating* is much longer and heavier than the others.\n\n```{r, include = FALSE}\nipos <- STARTUPS %>%\n  filter(!is.na(investment_rounds)&investment_rounds!=0&status==\"ipo\")\n\nipos <- rbind(summary(log(ipos$investment_rounds)))\n\nacquired <- STARTUPS %>%\n  filter(!is.na(investment_rounds)&investment_rounds!=0&status==\"acquired\") \n\nacquired <- rbind(summary(log(acquired$investment_rounds)))\n\n\nclosed <- STARTUPS %>%\n  filter(!is.na(investment_rounds)&investment_rounds!=0&status==\"closed\") \n\nclosed <- rbind(summary(log(closed$investment_rounds)))\n\noperating <- STARTUPS %>%\n  filter(!is.na(investment_rounds)&investment_rounds!=0&status==\"operating\") \n\noperating <- rbind(summary(log(operating$investment_rounds)))\n\n\n\nssp <- rbind(colnames(ipos), ipos, acquired, closed, operating)\nssp <- cbind(c(\"\",\"Ipo\",\"Acquired\",\"Closed\", \"Operating\"), ssp)\n\n\nssp.p <- ggtexttable(ssp, cols=NULL,\n                        theme = ttheme(\"mOrange\"))\n```\n\n\\ \n\n## Invested companies \n\nInvested companies\nThe discrete variable **invested_companies** indicates the number of companies in which the startup has invested\n\n```{r, include=TRUE, fig.width=10}\nbox <- ggplot(STARTUPS, aes(y=invested_companies, x=status)) +\n  geom_boxplot() + coord_flip() +\n  labs(y=\"Number of invested companies\", x=\"\")\n\n\nipos <- STARTUPS %>%\n  filter(!is.na(invested_companies)&status==\"ipo\")\n\nipos <- rbind(round(summary(ipos$invested_companies), 3))\n\nacquired <- STARTUPS %>%\n  filter(!is.na(invested_companies)&status==\"acquired\") \n\nacquired <- rbind(round(summary(acquired$invested_companies), 3))\n\n\nclosed <- STARTUPS %>%\n  filter(!is.na(invested_companies)&status==\"closed\") \n\nclosed <- rbind(round(summary(closed$invested_companies), 3))\n\noperating <- STARTUPS %>%\n  filter(!is.na(invested_companies)&status==\"operating\") \n\noperating <- rbind(round(summary(operating$invested_companies), 3))\n\n\n\nssp <- rbind(colnames(ipos), ipos, acquired, closed, operating)\nssp <- cbind(c(\"\",\"Ipo\",\"Acquired\",\"Closed\", \"Operating\"), ssp)\n\n\nssp.p <- ggtexttable(ssp, cols=NULL,\n                        theme = ttheme(\"mOrange\"))\n\nggarrange(box, ssp.p, ncol = 1, nrow = 2)\n\n```\n\n\\ \n\n## Funding rounds \n\nThe discrete variable **funding_rounds** indicates the number of funding rounds the companies has faced. The values are integers between 0 and 15.\n\nThe following are the absolute and relative frequencies related to *status*, with the respective marginal frequencies:\n\n```{r}\na <- table(STARTUPS$funding_rounds, STARTUPS$status)  \n  \na <- cbind(a, rep(0, nrow(a)))\n\nfor (i in 1:nrow(a)){\n  a[i, 5] <- sum(a[i,])\n}\n\na <- rbind(a, rep(0, ncol(a)))\nfor (i in 1:ncol(a)){\n  a[nrow(a),i] <- sum(a[,i])\n}\n\na <- cbind(seq(1, 15, 1), a[,1], a[,2], a[,3], a[,4], a[,5])\ncolnames(a) <- c(\"funding_rounds\", \"acquired\", \"closed\", \"ipo\", \"operating\", \"tot_funding_rounds\")\n\na <- a[1:16,]\n\na <- rbind(a[,2],a[,3],a[,4],a[,5])\nrownames(a) <- c( \"acquired\", \"closed\", \"ipo\", \"operating\")\na <- rbind(a, rep(0, 16))\n\nfor (i in 1:ncol(a)) {\n  a[5, i] <- sum(a[,i])\n}\n\n\na <- cbind(a, rep(0, nrow(a)))\n\nfor (i in 1:nrow(a)){\n  a[i, 17] <- sum(a[i,])\n}\n\ncolnames(a) <- as.character(seq(0,16,1))\ncolnames(a)[17] <- \"total of status\"\nrownames(a)[5] <- \"total of funding rounds\"\n\n\n\n# frequency table\nssp.p <- ggtexttable(a,\n                        theme = ttheme(\"mOrange\"))\n\n\n```\n\n\n```{r, include=TRUE, fig.width=10}\n# relative frequency table\n\nb <- a[,]\nfor (r in 1:5){\n  for (c in 1:16){\n    b[r,c] <- round(b[r,c]/b[r,17]*100,2)\n  }\n}\n\nssp.p1 <- ggtexttable(b,\n                        theme = ttheme(\"mOrange\"))\n\nggarrange(ssp.p, ssp.p1, ncol = 1, nrow = 2)\n```\n\nThe second table shows the percentages on the total of each *status*. Most companies (83.6%) did not even go through 1 investment round. 10.3% of them passed 1, of which 61.2% failed. It is interesting to notice that after 2 funding rounds, the percentage of companies in IPO is always greater than the percentage of the failed companies. Furthermore, listed companies also have the highest percentage (among those other than 0) in *funding_rounds* values greater than 10.\n\nThese considerations make us to think that probably the **number of funding rounds** is a factor **not to be excluded** as it is linked to the success of a startup. In particular, the greater number of rounds increases the startup's chances of reaching the IPO.\n\n## Total raised amount\n\n**funding_total_usd** is a continuous numerical variable, which indicates the total funding received by the startup in all funding rounds.\n\n`r sum(STARTUPS$funding_total_usd==0, na.rm = TRUE)` startup have had no financing, `r sum(STARTUPS$funding_total_usd!=0, na.rm = TRUE)` have had financing and `r sum(is.na(STARTUPS$funding_total_usd))` are the missing values (NA), which are not going to be taken into account.\n\nDue to the high number of missing values (NA), we are going to analyze the *funding_total_usd* distribution without them. \n\n```{r, include = TRUE, fig.width=7, fig.height=2}\noptions(\"scipen\"=100, \"digits\"=4)\nggtexttable(as.matrix(rbind(round(summary(STARTUPS$funding_total_usd[STARTUPS$funding_total_usd!=0&!is.na(STARTUPS$funding_total_usd)]), 3))), theme = ttheme(\"mOrange\"))\n```\n\n\n```{r, include = TRUE, fig.width=10, fig.height=2}\nbox <- ggplot(STARTUPS[STARTUPS$funding_total_usd!=0,], aes(x=funding_total_usd)) + \n  geom_boxplot() + labs(x=\"Total raised amount\", y=\"\") + \n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\n\ndens <- ggplot(STARTUPS[STARTUPS$funding_total_usd!=0,], aes(x=funding_total_usd, ..density..)) + \n  geom_histogram(col = \"white\") +\n  geom_density(col = \"red\") + labs(y=\"\", x=\"Total raised amount\")\n\nggarrange(box, dens, ncol = 2, nrow = 1)\n```\n\n\nThe distribution is still strongly **positively skewed**. This strong skewness can lead to worse results when we perform regression using this kind of variable as independent, but also in the visualization. For that reason, we are not going to use the *funding_total_usd* variable, but its **natural logarithm** (named **log_fund_tot**):\n\nThe logarithmic transformation will be applied only to values other than 0, to avoid problems of numerical representation.\n\nThe new variable has the following distribution:\n\n```{r, include=TRUE,fig.height=2, fig.width=5}\nSTARTUPS <- STARTUPS %>%\n  mutate(log_fund_tot=ifelse(funding_total_usd == 0, 0, log(funding_total_usd))) \n\nfinale <- finale %>%\n  mutate(log_fund_tot=ifelse(funding_total_usd == 0, 0, log(funding_total_usd))) %>%\n  select(-funding_total_usd)\n\nggtexttable(as.matrix(rbind(\n  round(summary(STARTUPS$log_fund_tot[STARTUPS$log_fund_tot!=0&!is.na(STARTUPS$log_fund_tot)]), 3) )), \n  theme = ttheme(\"mOrange\"))\n```\n\n\n```{r, include=TRUE, fig.width=14}\nbox <- ggplot(STARTUPS[STARTUPS$log_fund_tot!=0,], aes(x=log_fund_tot)) + \n  geom_boxplot() + labs(x=\"Logarithm of received fundings\", y=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank(), axis.title.x = element_text(size=23))\n\ndens <- ggplot(STARTUPS[STARTUPS$log_fund_tot!=0,], aes(x=log_fund_tot, ..density..)) + \n  geom_histogram(col = \"white\") +\n  geom_density(col = \"red\") + labs(y=\"\", x=\"Logarithm of received fundings\") + theme(axis.title.x = element_text(size=23))\n\nggarrange(box, dens, ncol = 2, nrow = 1)\n```\n\nApplying the logarithm allows us to solve a series of problems:\n\n- **Strong positive skewness**: the distribution is no longer strongly skewed and the mean and median values are closer to each other.\n- **Lack of normality of the distribution**: As we can see from the histogram, the distribution now looks much more like that of a normal variable;\n- **Outliers**: The number of outliers found by the *Tukey fences* (k = 3) has significantly decreased. Previously, some observations were considered outliers simply because the distribution was highly positive skewed, not because they were actually outliers.\n\n\\ \n\nNow let's analyze the distribution of *log_fund_tot* related to the levels of *status*:\n\n```{r, include=TRUE, fig.width=12}\n\nbox <- ggplot(STARTUPS[STARTUPS$log_fund_tot!=0&!is.na(STARTUPS$log_fund_tot),], aes(x=status,y=log_fund_tot)) + \n  geom_boxplot() + labs(x=\"\", y=\"Logarithm of received fundings\") + theme(axis.text.x = element_text(size = 18), axis.text.y = element_text(size = 18))\n\nt <- STARTUPS  %>%\n  group_by(status)  %>%\n  summarise(percentage_null_values=sum(log_fund_tot==0, na.rm = TRUE)/n()*100, num_null_values=n())\n\nssp.p <- ggtexttable(t, rows = NULL,\n                        theme = ttheme(\"mOrange\"))\n\nggarrange(box, ssp.p, ncol = 2, nrow = 1)\n```\n\n**Listed*+ and **acquired** startups receive, medianally, **greater investments** than failed and operating ones. 32.7% of failed startups did not obtain financing, a value that unexpectedly rises to 55.5% for companies in IPO and 75.2% for the acquired ones. 87.25% of the operating companies did not receive funding. \n\n\\ \n\n## Milestones\n\n```{r, include=TRUE, fig.width=10, fig.height=2}\n\nuno <- ggtexttable(as.matrix(rbind(table(STARTUPS$milestones))), theme = ttheme(\"mOrange\"))\ndue <- ggtexttable(as.matrix(rbind(round(table(STARTUPS$milestones)/sum(table(STARTUPS$milestones))*100, 4))), \n                   theme = ttheme(\"mOrange\"))\n\n\nggarrange(uno, due, ncol = 1, nrow = 2)\n```\n\nThe variables has **8 levels**, each of which represent the number of milestones. The frequency table shows that most startups (53.18%) do not reach any milestones, while only `r round(sum(table(STARTUPS$milestones)[3:10])/sum(table(STARTUPS$milestones))*100,4)`% reach more than 1 milestone.\n\n```{r, fig.width=11, fig.height=2 ,include=TRUE}\na <- table(STARTUPS$status, STARTUPS$milestones)\n\na <- ggtexttable(a,theme = ttheme(\"mOrange\"))\n\n\nb <-table(STARTUPS$status, STARTUPS$milestones)\nb <- cbind(b, round(apply(b, 1, sum),0))\n\nfor(r in 1:4){\n  for (c in 1:10){\n    b[r,c] <- round(b[r,c]/b[r,11],3)\n  }\n}\n\nb <- ggtexttable(b[,-11],theme = ttheme(\"mOrange\"))\n\nggarrange(a, b, ncol = 2, nrow = 1)\n```\n\nThe two tables express the **absolute frequencies** and the **frequencies relating** to the total number of companies per sector. We see again that the percentage of companies in IPO is higher than that of failed and operating companies. This time even the acquired companies have this behavior.\n\nWe conclude that the number of milestones could also **positively impact** the success of a startup.\n\n\\ \n\n## Relationships \n\n**relationships** is a dicrete variable which measure the numeber of relations that the startup has with **external entities**, which can be other companies, investment funds, venture capital funds, individuals, etc. \n\n```{r, include=TRUE, fig.width=17, fig.height=3}\ni <- ggplot(STARTUPS, aes(x=relationships)) + geom_boxplot() +  \n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank(), axis.title.x = element_text(size=17), axis.text.x = element_text(size = 17)) + labs(x=\"Number of relationships\")\n\na <- rbind(round(summary(STARTUPS$relationships[STARTUPS$status==\"ipo\"&!is.na(STARTUPS$relationships)]), 3),\n           round(summary(STARTUPS$relationships[STARTUPS$status==\"acquired\"&!is.na(STARTUPS$relationships)]), 3),\n           round(summary(STARTUPS$relationships[STARTUPS$status==\"closed\"&!is.na(STARTUPS$relationships)]),3),\n           round(summary(STARTUPS$relationships[STARTUPS$status==\"operating\"&!is.na(STARTUPS$relationships)]), 3))\n\nrownames(a) <- c(\"ipo\", \"acquired\", \"closed\", \"operating\")\n\nb <- ggtexttable(a, theme = ttheme(\"mOrange\"), rows = rownames(a))\n\nggarrange(i, b, ncol=2, nrow = 1)\n```\n\nThe summary table shows the quartiles, the median, the average and the range (maximum and minimum) of relationships conditioned to the levels of status. It is clear that the startups in **IPO** have much **higher values** than the other distributions, and it does not even have missing values. The **acquired companies** have **on average more relationships** than those that are closed and operating, even if on average the closed companies have one more relationship. The difference is in the **right tail**, much heavier and longer than the one in closed, which have the smallest range of the 4 categories.\n\n\n## Funding round type \n\n***funding_round_type*** is a categorial variable having **`r length(table(funding_rounds$funding_round_type))`** non-orderable levels indicating the type of financing received by the company.\n\n```{r, fig.width=9, fig.height=2, include=TRUE}\nu <-  merge(STARTUPS, funding_rounds, by.x=\"id\", by.y=\"object_id\", all.x=TRUE)\n\nggtexttable(as.matrix(rbind(table(u$funding_round_type))), theme = ttheme(\"mOrange\"))\n```\n\n\n```{r, fig.width=13, include=TRUE}\na <- u %>%\n  group_by(funding_round_type) %>%\n  summarise(n=n())\n\na <- within(a, funding_round_type <- factor(funding_round_type, levels=funding_round_type[order(n, decreasing = TRUE)]))\n\nabsolut <- ggplot(a[!is.na(a$funding_round_type),], aes(x=funding_round_type, n)) + \n  geom_col() + \n  theme(axis.text.x = element_text(angle=90, size = 15, vjust = 0.3)) +\n  geom_text(aes(label = n), size=6, vjust = -0.2) + labs(x=\"\", y=\"Totale aziende\")\n  \nb <-  within(u, funding_round_type <- factor(funding_round_type, levels = c(\"venture\", \"angel\", \"series-a\", \"series-b\", \"series-c+\", \"other\", \"private-equity\", \"crowdfunding\", \"post-ipo\")))\n\nprop <- ggplot(b[!is.na(b$funding_round_type)&b$funding_round_type!=\"post-ipo\",], aes(x=funding_round_type, fill=status)) + \n  geom_bar(position = \"fill\") +\n  theme(axis.text.x = element_text(angle=90, size = 15, vjust = 0.3)) + \n  labs(y=\"Proporzioni\", x=\"\")\n\nggarrange(absolut, prop, ncol = 2, nrow = 1)\n```\n\nFrom the plot on the left, which indicates the absolute frequencies for the different levels of funding_round_type, `r sum(is.na(b$funding_round_type))` missing values have been eliminated, i.e. the startups that have not gone through a single funding round.\n\nAs expected, most of the fundings are **venture/angel** since these are the **first steps** that the startup goes through, and a greater number of companies manage to survive up to these steps. The following rounds are, in order, **series a**, **series b** and **series c**. In this case we see the number of companies gradually reducing, given that these are steps that must be achieved with time and maturity. **Private equity** and **crowdfunding** have a low frequency not because they are even more advanced steps, but because they are \"sub-types\" of financing that can take place during other steps. **Post-IPO** investments, on the other hand, are very few because they assume that the company has reached the IPO.\n\nThe second plot shows the proportions of status for each type of financing. Tendentially, the number of acquired companies increases with each step (from venture to series c), while the number of IPOs increases from series a to series c. An important percentage of startups that receive private equity financing reach the IPO while practically all those financed in crowdfunding are operating (a very small part closed or in IPO). The startups that close are practically 0 among those financed in private equity, while they maintain a similar percentage in all steps, from angel to series c.\n\nTo actually verify the dependence between these two variables, we use the **Cramer index**:\\[ V=\\sqrt{\\frac{X^{2}}{n\\cdot \\left ( min\\left \\{h,k -1 \\right \\} \\right )}}   \\] \n\nwhere $X^{2}$ is the ***chi-squared association index***: \\[  X^{2} = \\sum_{i=1}^{k}\\sum_{j}^{k}\\frac{n_{ij}-n_{ij}^{*} }{n_{ij}^{*}} \\] \n\n\n\n$n_{ij}^{*}$ are the expected frequencies under indipencence assumption. $X^{2}$ index is euql to 0 if the two variables are indipendent to each other, and it is positive if they are dependent on each other.  \n\nThe Cramer index varies in the [0,1] interval and it can be interpreted in the following way:\n\n- **0**: total indipendence \n- **1**: total dependence\n- **lower than 0.3**: low dependence\n- **higher than 0.3**: moderate dependence.\n\nIn this case it is equal to `r cramer.v(table(u$funding_round_type, u$status))`, showing the quite total indipendence between *funding_round* and *status*.\n\n\\ \n\n## Acquisitions\n\nIn this paragraph we are going to analyze the number of companies acquired by the startups. To do so, we take into consideration the dataset ***acquisitions***.\n\n```{r}\nt <- acquisitions %>%\n  group_by(acquiring_object_id) %>%\n  summarise(num_acquisizioni_effettuate=n()) \nt <- merge(STARTUPS, t, by.x=\"id\", by.y = \"acquiring_object_id\", \n                   all.x = TRUE) %>% \n  select(id, num_acquisizioni_effettuate, status)\nt$num_acquisizioni_effettuate[which(is.na(t$num_acquisizioni_effettuate))] <- 0\n```\n\n```{r, include=TRUE, fig.width=15, fig.height=3}\na <- as.data.frame(table(t$num_acquisizioni_effettuate))\nfreq_rel <- a[,2]/sum(a[,2])*100\na <- as.data.frame(rbind(as.character(a[,1]), a[,2], round(freq_rel, 2)))\nrownames(a) <- c(\"Number of acquisitions\", \"Absolute frequency\", \"Relative frequency\")\nggtexttable(a, theme = ttheme(\"mOrange\"), cols = NULL)\n```\n\n97.57 % of companies acquired only a startup, and `r sum(as.numeric(a[3, 1:10]))` had not acquired more than 9. \n\nLet's see the distribution of frequency conditioned on *status*: \n\n```{r, include=TRUE, fig.width=15, fig.height=6.5, include=TRUE}\nb <- table(t$status, t$num_acquisizioni_effettuate)\nb <-  as.data.frame(rbind(b[1,], b[2,], b[3,], b[4,]))\nrownames(b) <- c(\"acquired\", \"closed\", \"ipo\", \"operating\")\nb_abs <- ggtexttable(b, theme = ttheme(\"mOrange\"))\n\nfor (c in 1:ncol(b)){\n  for (r in 1:nrow(b)){\n    b[r,c] <- round(   b[r,c]/apply(b, 1, sum)[[r]]  , 4)\n  }\n}\nb_relat <- ggtexttable(b, theme = ttheme(\"mOrange\"))\n\n\n\nbarp <- ggplot(t, aes(x=factor(num_acquisizioni_effettuate), fill=status)) + geom_bar(position = \"fill\") + \n  labs(x=\"Number of acquired companies\", y=\"Proportion\")\n\nggarrange(b_abs, barp, ncol=1, nrow = 2)\n```\n\nThe table shows the frequencies of the number of acuisitions per status. We can notice that the **highest numbers of acquisitions** are on behalf of **listed companies**. \n\nThe barplot shows the percentage of *status* for each number of acquisitions. For the values between **0 and 12**, there is a tendencial **increase in the rate of listed companies** and a progressive **decrease in the operating ones**. Acquired companies increase for the values 8, 12, and 16. For values higher than 16, we have only IPO startups, except for the levels corresponding to 24 and 96 acquisitions, where there is an *operating* observation. \n\n\\ \n\n## Source of funding\n\nWhere does the fundings come to a startup come from? From physical people? From investment funds? Or from other startups? And above all, these differences have an impact on the future of the company? \n\n\n### Single-source funding\n\nLet's first analyze the companies which received fundings only **from one entity**. We create a new categorial variable ***source***, having three different levels (**person_financed**, **startup_financed** e **fin_org_financed**), each of them indicating the source of the fundings obtained by a startup. \n\n```{r, fig.width=17}\n\npers <- as.numeric(finale$person_financed) -1\nstar <- as.numeric(finale$startup_financed) -1\norg <- as.numeric(finale$fin_org_financed) -1\n\n\ntot_fin <- apply(as.matrix((cbind(pers, org, star))), 1, sum)\n\n\nfin_1 <- finale %>%\n  mutate(tot_fin = tot_fin) %>%\n  filter(tot_fin == 1)  %>%\n  select(status, person_financed, startup_financed, fin_org_financed) \n\n\nprovenienza <- rep(NA, nrow(fin_1))\n\nfor (r  in 1:nrow(fin_1)){\n  provenienza[r] <- c(\"startup\", \"fin_org\",\"person\")[c(fin_1$startup_financed[r]==1,fin_1$fin_org_financed[r]==1,fin_1$person_financed[r]==1)]\n}\n\nfin_1 <- fin_1 %>%\n  mutate(provenienza = factor(provenienza))\n  \n\nuno <- ggtexttable(as.matrix(rbind(table(fin_1$status))))\ndue <- ggplot(fin_1[fin_1$person_financed==1,], aes(x=status, ..count..)) + geom_bar() + labs(x=\"\", y=\"Total\")\n\n# ggarrange(uno, due, ncol=2, nrow = 1)\n\npers_1 <- ggplot(fin_1, aes(x=factor(person_financed), y=..count.., fill = status)) +\n  geom_bar() + labs(x=\"Financed by person\", y=\"Total\") +theme(legend.position = \"none\")\nstart_1 <- ggplot(fin_1, aes(x=factor(startup_financed), y=..count.., fill = status)) +\n  geom_bar() + labs(x=\"Financed by company\", y=\"\") + theme(legend.position = \"none\")\nfinorg_1 <- ggplot(fin_1, aes(x=factor(fin_org_financed), y=..count.., fill = status)) +\n  geom_bar() + labs(x=\"Financed by financial organization\",y=\"\") \n\n#ggarrange(pers_1, start_1, finorg_1, ncol = 3, nrow = 1)\n```\n\n\n\n```{r, fig.width=5,  include=TRUE}\nggplot(fin_1, aes(x=provenienza, ..count.., fill = status)) + geom_bar() + labs(y=\"Total\")\n```\n\nThe barplot shows the frequencies of ***source***, with the proportions of observations belonging to the different classes of *status*. It is noticeable that these proportions are **very similar** in the three classes.\n\n```{r, fig.width=5,  include=TRUE}\nmosaicplot(table(fin_1$status, fin_1$provenienza), color = TRUE, shade = TRUE, legend = TRUE, main=\"\", las=2)\n```\n\nThe mosaicplot shows the relative frequencies of the **joint distribution** of ***status*** and ***source***. The area in the rectangles is directly proportional to the number of observations belonging to that particular joint class.\n\nThe colours indicate which are the factors that most \"deviate\" from the **indipendence condition**. Specifically, they show the **Pearson residuals** (legend on the right), i.e. a measure of how much that value of the joint distribution deviates from the theoretical value expected under indipendence assumption. \n\nThey are mathematically defined as:\n\n\\[ e_{ij} = \\frac{n_{ij}-n_{ij}^{*}}{\\sqrt{n_{ij}^{*}}} \\] \n\nfor $i = 1, 2,...,k$ e $j = 1, 2,...,h$ where $k$ and $h$ are the number of classes of the two variables, $n_ij$ are the observed frequencies and $n_ij^{*}$ the frequencies expected under independence assumption. \n\nIn this case we see that the highest resisual is in the class of cosed companies, funded by financial institutions, while the lower one is in the class of acquired companies, funded by other companies. This means that in these classes there are respectively more or less observations of the ones we would observe if the two characters were independent. \n\nThe Cramer index is equal to `r cramer.v(table(fin_1$status, fin_1$provenienza))`. ***status*** and ***source*** are therefore almost totally independent.\n\n\\ \n\n\n### Double-source funding \n\n\n```{r}\n\nfin_2 <- finale %>%\n  mutate(tot_fin = tot_fin) %>%\n  filter(tot_fin == 2)  %>%\n  select(status, person_financed, startup_financed, fin_org_financed) \n\nprovenienza <- rep(NA, nrow(fin_2))\n\nfor (r  in 1:nrow(fin_2)){\n  provenienza[r] <- c(\"star_fin\", \"fin_pers\",\"start_pers\")[c(fin_2$startup_financed[r]==1&fin_2$fin_org_financed[r]==1,\n                                                  fin_2$fin_org_financed[r]==1&fin_2$person_financed[r]==1, fin_2$startup_financed[r]==1&fin_2$person_financed[r]==1)]\n}\n\nfin_2 <- fin_2 %>%\n  mutate(provenienza = factor(provenienza))\n```\n\n\n\n```{r, fig.width=17}\n\n##start + fin\nu <- fin_2 %>%\n  mutate(start_fin = ifelse(fin_org_financed==1 & startup_financed==1 &\n                             person_financed==0 , 1, 0) ,\n         start_pers = ifelse(fin_org_financed==0 & startup_financed==1 &\n                             person_financed==1, 1, 0), \n         fin_pers = ifelse(fin_org_financed==1 & startup_financed==0 &\n                             person_financed==1, 1, 0)) %>%\n  select(status, start_fin, start_pers, fin_pers)\n\n#sum(u$start_fin==1)\n#sum(u$start_pers==1)\n#sum(u$fin_pers==1)\n  \nf <- ggplot(u, aes(x=factor(start_fin), ..count.., fill = status)) + geom_bar() +\n  labs(x=\"Finanziato da azienda e fondo\", y=\"Totale\") + theme(legend.position = \"none\")\ng <- ggplot(u, aes(x=factor(start_pers), ..count.., fill = status)) + geom_bar() + \n  labs(x=\"Finanziato da azienda e persona fisica\", y=\"\") + theme(legend.position = \"none\")\nh <- ggplot(u, aes(x=factor(fin_pers), ..count.., fill = status)) + geom_bar() + \n  labs(x=\"Finanziato da fondo e persona fisica\", y=\"\")\n\ni <- rbind(table(u$status, u$start_fin)[,1], table(u$status, u$start_fin)[,2])\nrownames(i) <- c(\"0\", \"1\")\ni <- ggtexttable(i, theme = ttheme(\"mOrange\"))\n\nl <- rbind(table(u$status, u$start_pers)[,1], table(u$status, u$start_fin)[,2])\nrownames(l) <- c(\"0\", \"1\")\nl <- ggtexttable(l, theme = ttheme(\"mOrange\"))\n\nm <- rbind(table(u$status, u$fin_pers)[,1], table(u$status, u$start_fin)[,2])\nrownames(m) <- c(\"0\", \"1\")\nm <- ggtexttable(m, theme = ttheme(\"mOrange\"))\n\n#relative ---------------\ni_rel <- rbind(table(u$status, u$start_fin)[,1], table(u$status, u$start_fin)[,2])\ntots <- apply(i_rel, 1, sum)\ni_rel <- rbind(round(i_rel[1,]/tots[1], 3)*100, round(i_rel[2,]/tots[2], 3)*100)\nrownames(i_rel) <- c(\"0\", \"1\")\ni_rel <- ggtexttable(i_rel, theme = ttheme(\"mOrange\"))\n\n\n\nl_rel <- rbind(table(u$status, u$start_pers)[,1], table(u$status, u$start_pers)[,2])\ntots <- apply(l_rel, 1, sum)\nl_rel <- rbind(round(l_rel[1,]/tots[1], 3)*100, round(l_rel[2,]/tots[2], 3)*100)\nrownames(l_rel) <- c(\"0\", \"1\")\nl_rel <- ggtexttable(l_rel, theme = ttheme(\"mOrange\"))\n\nm_rel <- rbind(table(u$status, u$fin_pers)[,1], table(u$status, u$fin_pers)[,2])\ntots <- apply(m_rel, 1, sum)\nm_rel <- rbind(round(m_rel[1,]/tots[1], 3)*100, round(m_rel[2,]/tots[2], 3)*100)\nrownames(m_rel) <- c(\"0\", \"1\")\nm_rel <- ggtexttable(m_rel, theme = ttheme(\"mOrange\"))\n# ------------------------\n\n# ggarrange(f, g, h,  ncol = 3, nrow = 1)\n```\n\n```{r, fig.width=17,fig.height=2}\n# ggarrange(i, l, m,i_rel, l_rel, m_rel, ncol = 3, nrow=2)\n```\n\n\n\n```{r, fig.width=13, include = TRUE}\nuno <- ggplot(fin_2, aes(provenienza, ..count.., fill = status)) + \n  geom_bar() + \n  labs(y=\"Total\") + \n  coord_flip()+\n  scale_x_discrete(labels=c(\"Fund + Physical person\", \"Company + fund\", \"Company + Physical person\"))\n\ntots <- apply(table(fin_2$provenienza, fin_2$status), 1, sum)\n\nt <- rbind(round(    table(fin_2$provenienza, fin_2$status)[1,]/tots[1]        ,3)   ,\n      round(table(fin_2$provenienza, fin_2$status)[2,]/tots[2],  3), \n      round(   table(fin_2$provenienza, fin_2$status)[3,]/tots[3],3   ))\n\nrownames(t) <- c(\"Fund + Fisical Person\", \"Company + Fund\", \"Company + Physical Person\")\n\ndue <- ggtexttable(t, theme = ttheme(\"mOrange\"))\n\nggarrange(uno, due, ncol=2, nrow = 1)\n\n```\n\nMost double-source startups receive fundings from **physical people and financial organization**, followed by companies and financial organization. Less frequent \"double sources\" are companies and physical people. The proportions of *status*, however, are very similar to each other for the three sources, and that could mean independence between the variables.  \n\n```{r, fig.width=4, include = TRUE}\nmosaicplot(table(fin_2$status, fin_2$provenienza), color = TRUE, shade = TRUE, legend = TRUE, main=\"\", las=2)  \n```\n\nThe mosaicplot confirm the assumption of independence between **status** and **source** for companies which received funding from two sources. The residuals, indeed, are in the range -2:2 (only for two classes we have residuals greater than 2 or lower than -2) and the Cramer index is equal to `r cramer.v(table(fin_2$status, fin_2$provenienza))` (weak dependence).\n\n### Triple-source fundings\n\nLet's see how behaves the startups which receive fundings from each of the three sources.  \n\n```{r, fig.width=17}\n\nfin_3 <- finale %>%\n  mutate(tot_fin = tot_fin) %>%\n  filter(tot_fin == 3)  %>%\n  select(status, person_financed, startup_financed, fin_org_financed) \n\ntable(fin_3$status)\ntable(fin_3$status)/table(finale$status)*100\n\n```\n\nThey are`r nrow(fin_3)` in total (`r nrow(fin_3)/nrow(finale)*100`% of the total observations). These include 0.87% of acquired startups, 0.49% of closed startups, 0.69% of IPOs and 0.29% of operating startups. This could mean that actually receiving funding from three different sources increases the probability of the startup being acquired or going to IPO. \n\n### Overall comparison *source-status*\n\nLet's verify ifthe different funding sources have an impact on *status*\n \n```{r}\nprovenienza_tot <- rep(NA, nrow(finale))\n\nfinale$fin_org_financed <- as.numeric(finale$fin_org_financed) - 1\nfinale$person_financed <- as.numeric(finale$person_financed) - 1\nfinale$startup_financed <- as.numeric(finale$startup_financed) - 1\n \nfor (r in 1:nrow(finale)){\n  if (finale$person_financed[r]+finale$startup_financed[r]+finale$fin_org_financed[r] == 3){\n    provenienza_tot[r] <- \"all\"\n  }else if(finale$person_financed[r]+finale$startup_financed[r]+finale$fin_org_financed[r] == 2){\n    if (finale$person_financed[r]==0){\n      provenienza_tot[r] <- \"start_fin\"\n    }else if(finale$startup_financed[r]==0){\n      provenienza_tot[r] <- \"pers_fin\"\n    }else{\n       provenienza_tot[r] <- \"pers_start\"\n    }\n  }else if(finale$person_financed[r]+finale$startup_financed[r]+finale$fin_org_financed[r] == 1){\n    if (finale$person_financed[r]==1){\n      provenienza_tot[r] <- \"pers\"\n    }else if(finale$startup_financed[r]==1){\n      provenienza_tot[r] <- \"start\"\n    }else{\n      provenienza_tot[r] <- \"fin_org\"\n    }\n  }else{\n    provenienza_tot[r] <- \"no_fin\"\n  } \n}\n\nfinale <-  finale %>%\n  mutate(provenienza = factor(provenienza_tot, levels = c(\"no_fin\", \"start\", \"fin_org\", \"pers\", \"start_fin\", \"pers_fin\", \"pers_start\", \"all\")))\n```\n\nFor this purpose, we create a categorial variable having `r length(levels(finale$provenienza))` classes,  indicating the source(s) of funding for each company. These levels are: \n\n- **no_fin**: company not financed by any of the three sources\n- **start**: company financed by startups only\n- **fin_org**: company financed only by financial organizations \n- **pers**: company financed by physical people only\n- **start_fin**: company financed by startups and financial organizations\n- **pers_fin**: company financed by people and financial organizations\n- **pers_start**: company financed by startups and people\n- **all**: company financed by startups, financial organizations and people\n \n```{r, include = TRUE, fig.width=18}\n\na <- ggplot(finale[finale$provenienza!=\"no_fin\",], aes(x=provenienza, ..count..)) +\n  geom_bar() + labs(title = \"Financing sources\", y=\"Totale\")\n\na1 <- ggplot(finale, aes(x=provenienza, ..count.., fill = status)) + geom_bar(position = \"fill\") + theme(axis.text.x = element_text(angle=90, size = 10, vjust = 0.3))  + labs(y=\"Proportion\")\n\nggarrange(a, a1, ncol = 2, nrow = 1)\n\n```\n\nIn the first plot have been deleted the `r sum(finale$provenienza==\"no_fin\")` startups which have not received fundings from any of the three sources. \n\nMost companies which received funding from at least one source, received them from a **financial organization**.\n\nIn the right-side plot we can notice the proportions of *status* for every source of funding. They do not vary appreciably from one source to another.\n\nThe Crames index is equal to `r cramer.v(table(finale$provenienza, finale$status))`, confirming that the characters are **weakly dependent** (almost independent). \n\n\\ \n\n## Number of products\n\nDoes introducing a lot of products to the market have an impact on the future of the company?\n\nTo find it out, the ***num_products*** variable has been built, from the *objects* dataset.\n\n\n```{r, fig.width=13, fig.height=3, include = TRUE}\n\nuni <- rbind(   table(finale$num_prodotti),  \n                \n        round(table(finale$num_prodotti)/sum(table(finale$num_prodotti)),3)*100)\n\n             \n\nggtexttable(uni, theme = ttheme(\"mOrange\"), rows = c(\"abs_freq\", \"relat_freq\"))\n```\n\nThe table shows absolute and relative frequency of the distribution of *num_prodotti*.\n\nMost companies (95.5%) do not even launch a product on the market, while `r sum(uni[1,1:8])/sum(uni[1,])`% of them do not launch more than 7. \n\nLet's see if by conditioning on *status* we notice any substancial difference. \n\n```{r, fig.width=16, fig.height=5, include = TRUE}\nmulti <- table(finale$status, finale$num_prodotti)\nmulti <- rbind(multi[1,], multi[2,], multi[3,], multi[4,])\nrownames(multi) <- c(\"acquiring\", \"closed\", \"ipo\", \"operating\")\n\ntot <- apply(multi, 1, sum)\n\nmulti_rel <- multi[,]\nfor (r in 1:nrow(multi)){\n  for (c in 1:ncol(multi)){\n    multi_rel[r,c] <- round(multi[r,c]/tot[r], 4)*100\n  }\n}\nmulti_rel <- ggtexttable(multi_rel ,theme = ttheme(\"mOrange\"))\nmulti <- ggtexttable(multi, theme = ttheme(\"mOrange\"))\n\nggarrange(multi, multi_rel, ncol = 1, nrow = 2)\n\nfinale <- finale %>%\n  select(-provenienza)\n```\n\nThe first table contains the absolute frequencies of the number of products per status, and the second one contains the frequencies relative to the total of companies in that particular *status*.\n\nWe can notice that as the number of launched product increases, the percentage of companies in IPO becomes greater than the others, but not so significantly as to conclude that the number of products has a significant effect on the success of the company.\n\n\\ \n\n```{r}\n\nfinale_no_na <- finale  %>% select(-id)  %>% na.omit() %>%\n  filter(category_code!=\"\", country_code!=\"\") %>%\n  mutate(category_code = factor(category_code), \n         country_code = factor(country_code), \n         person_financed=factor(person_financed), \n         startup_financed = factor(startup_financed), \n         fin_org_financed = factor(fin_org_financed)) %>%   \n  select(-logo_width, -logo_height)  \n\n#macrocategories creation\n\n## macro-areas\nidx_africa <- which(finale_no_na$country_code==\"NGA\"| \n                      finale_no_na$country_code==\"PST\"| \n                      finale_no_na$country_code==\"REU\"|\n                      finale_no_na$country_code==\"SEN\"|\n                      finale_no_na$country_code==\"SYC\"|\n                      finale_no_na$country_code==\"CMR\"| \n                      finale_no_na$country_code==\"EGY\"| \n                      finale_no_na$country_code==\"GHA\"| \n                      finale_no_na$country_code==\"KEN\"|\n                      finale_no_na$country_code==\"MAR\"| \n                      finale_no_na$country_code==\"TUN\"|\n                      finale_no_na$country_code==\"UGA\"|\n                      finale_no_na$country_code==\"ZAF\")\nidx_america_nord <- which(finale_no_na$country_code==\"CAN\"|\n                            finale_no_na$country_code==\"NGA\"|\n                            finale_no_na$country_code==\"MEX\"|\n                            finale_no_na$country_code==\"UMI\"|\n                            finale_no_na$country_code==\"USA\")\nidx_america_centro <- which(finale_no_na$country_code==\"ANT\"|\n                              finale_no_na$country_code==\"DOM\"|\n                              finale_no_na$country_code==\"BMU\"|\n                              finale_no_na$country_code==\"GTM\"|\n                              finale_no_na$country_code==\"BRB\"|\n                              finale_no_na$country_code==\"PAN\"|\n                              finale_no_na$country_code==\"CRI\"|\n                              finale_no_na$country_code==\"SLV\"|\n                              finale_no_na$country_code==\"CYM\")\nidx_america_sud <- which(finale_no_na$country_code==\"ARG\"|\n                           finale_no_na$country_code==\"BRA\"|\n                           finale_no_na$country_code==\"CHL\"|\n                           finale_no_na$country_code==\"COL\"|\n                           finale_no_na$country_code==\"PER\"|\n                           finale_no_na$country_code==\"ECU\"|\n                           finale_no_na$country_code==\"URY\"|\n                           finale_no_na$country_code==\"VEN\")\nidx_europa_nord <- which(finale_no_na$country_code==\"DNK\"|\n                           finale_no_na$country_code==\"EST\"|\n                           finale_no_na$country_code==\"FIN\"|\n                           finale_no_na$country_code==\"GBR\"|\n                           finale_no_na$country_code==\"IRL\"|\n                           finale_no_na$country_code==\"ISL\"|\n                           finale_no_na$country_code==\"LTU\"|\n                           finale_no_na$country_code==\"LVA\"|\n                           finale_no_na$country_code==\"NOR\"|\n                           finale_no_na$country_code==\"SWE\")\nidx_europa_occ <- which(finale_no_na$country_code==\"AUT\"|\n                          finale_no_na$country_code==\"BEL\"|\n                          finale_no_na$country_code==\"CHE\"|\n                          finale_no_na$country_code==\"DEU\"|\n                          finale_no_na$country_code==\"FRA\"|\n                          finale_no_na$country_code==\"LUX\"|\n                          finale_no_na$country_code==\"MCO\"|\n                          finale_no_na$country_code==\"NLD\")\nidx_europa_orient <- which(finale_no_na$country_code==\"BGR\"|\n                             finale_no_na$country_code==\"BLR\"|\n                             finale_no_na$country_code==\"CZE\"|\n                             finale_no_na$country_code==\"HUN\"|\n                             finale_no_na$country_code==\"POL\"|\n                             finale_no_na$country_code==\"ROM\"|\n                             finale_no_na$country_code==\"SVK\"|\n                             finale_no_na$country_code==\"UKR\")\nidx_europa_sud <- which(finale_no_na$country_code==\"BGD\"|\n                          finale_no_na$country_code==\"CYP\"|\n                          finale_no_na$country_code==\"ESP\"|\n                          finale_no_na$country_code==\"GRC\"|\n                          finale_no_na$country_code==\"HRV\"|\n                          finale_no_na$country_code==\"ITA\"|\n                          finale_no_na$country_code==\"MKD\"|\n                          finale_no_na$country_code==\"MLT\"|\n                          finale_no_na$country_code==\"PRT\"|\n                          finale_no_na$country_code==\"SMR\"|\n                          finale_no_na$country_code==\"ALB\"|\n                          finale_no_na$country_code==\"SVN\")\nidx_medio_oriente <- which(finale_no_na$country_code==\"ARE\"|\n                             finale_no_na$country_code==\"AZE\"|\n                             finale_no_na$country_code==\"BHR\"|\n                             finale_no_na$country_code==\"GEO\"|\n                             finale_no_na$country_code==\"ISR\"|\n                             finale_no_na$country_code==\"JOR\"|\n                             finale_no_na$country_code==\"LBN\"|\n                             finale_no_na$country_code==\"SAU\"|\n                             finale_no_na$country_code==\"TUR\")\nidx_asia_orient <- which(finale_no_na$country_code==\"CHN\"|\n                           finale_no_na$country_code==\"HKG\"|\n                           finale_no_na$country_code==\"JPN\"|\n                           finale_no_na$country_code==\"KOR\"|\n                           finale_no_na$country_code==\"PRK\"|\n                           finale_no_na$country_code==\"TWN\")\nidx_asia_sud <- which(finale_no_na$country_code==\"IND\"|\n                        finale_no_na$country_code==\"NPL\"|\n                        finale_no_na$country_code==\"PAK\")\nidx_sud_est_asiatico <- which(finale_no_na$country_code==\"PHL\"|\n                                finale_no_na$country_code==\"SGP\"|\n                                finale_no_na$country_code==\"THA\"|\n                                finale_no_na$country_code==\"VNM\"|\n                                finale_no_na$country_code==\"IDN\"|\n                                finale_no_na$country_code==\"MMR\"|\n                                finale_no_na$country_code==\"MYS\")\nidx_oceania <- which(finale_no_na$country_code==\"AUS\"|\n                       finale_no_na$country_code==\"NRU\"|\n                       finale_no_na$country_code==\"NZL\")\n\nfinale_no_na$macro_area <- rep(\"\", nrow(finale_no_na))\n\nfinale_no_na$macro_area <- as.character(finale_no_na$macro_area)\n\nfinale_no_na$macro_area[idx_africa] <- \"AFRICA\"\nfinale_no_na$macro_area[idx_america_nord] <- \"NORTH AMERICA\"\nfinale_no_na$macro_area[idx_america_centro] <- \"CENTRAL AMERICA\"\nfinale_no_na$macro_area[idx_america_sud] <- \"SOUTH AMERICA\"\nfinale_no_na$macro_area[idx_europa_nord] <- \"NORTH AMERICA\"\nfinale_no_na$macro_area[idx_europa_orient] <- \"EAST AMERICA\"\nfinale_no_na$macro_area[idx_europa_occ] <- \"WEST AMERICA\"\nfinale_no_na$macro_area[idx_europa_sud] <- \"SOUTH EUROPE\"\nfinale_no_na$macro_area[idx_medio_oriente] <- \"MIDDLE EAST\"\nfinale_no_na$macro_area[idx_asia_orient] <- \"EAST ASIA\"\nfinale_no_na$macro_area[idx_sud_est_asiatico] <- \"SOUTH-EAST ASIA\"\nfinale_no_na$macro_area[idx_asia_sud] <- \"SOUTH ASIA\"\nfinale_no_na$macro_area[idx_oceania] <- \"OCEANIA\"\n\nfinale_no_na$macro_area[which(finale_no_na$country_code==\"RUS\")] <- \"NORTH ASIA (Russia)\"\n\nfinale_no_na$macro_area <- factor(finale_no_na$macro_area)\n\n#macrocategorie settori \nfinale_no_na$category_code <- as.character(finale_no_na$category_code)\n\nidx_tech <-  which(finale_no_na$category_code==\"biotech\"| \n                     finale_no_na$category_code==\"cleantech\"|\n                     finale_no_na$category_code==\"nanotech\"|\n                     finale_no_na$category_code==\"automotive\"|\n                     finale_no_na$category_code==\"semiconductor\")\n\ncommunication_idx <- which(finale_no_na$category_code==\"messaging\"|\n                             finale_no_na$category_code==\"social\"|\n                             finale_no_na$category_code==\"public_relations\"|\n                             finale_no_na$category_code==\"advertising\"|\n                             finale_no_na$category_code==\"news\")\n\nother_idx <- which(finale_no_na$category_code==\"government\"|\n                     finale_no_na$category_code==\"pets\")\n\nfinale_no_na$category_code[idx_tech] <- \"tech\"\nfinale_no_na$category_code[communication_idx] <- \"communication\"\nfinale_no_na$category_code[other_idx] <- \"other\"\n\nfinale_no_na$category_code <- factor(finale_no_na$category_code)\n\n\n# sector\nmacro_settore <- rep(NA, nrow(finale_no_na))\n\nidx_digital <- which(finale_no_na$category_code==\"ecommerce\"|\n                   finale_no_na$category_code==\"games_video\"|\n                     finale_no_na$category_code==\"photo_video\"|\n                     finale_no_na$category_code==\"software\"|\n                     finale_no_na$category_code==\"ecommerce\"|\n                     finale_no_na$category_code==\"web\")\nidx_tecnologia <- which(finale_no_na$category_code==\"tech\"|\n                          finale_no_na$category_code==\"mobile\"|\n                          finale_no_na$category_code==\"hardware\"|\n                          finale_no_na$category_code==\"newtwork_hosting\")\nmacro_settore[idx_digital] <- \"digital\"\nmacro_settore[idx_tecnologia] <- \"technology\"\nmacro_settore[which(is.na(macro_settore))] <- \"other\"\n\nfinale_no_na <- finale_no_na%>%mutate(macro_settore = factor(macro_settore)) %>%\n  select(-private_equity)\n```\n\n\n# Feature engeneering\n\nThe variables **angel**, **crowdfunding**, **other**, **post-ipo**, **private-equity**, **series_a**, **series_b**, **series_c** and **venture** have been added to the dataset. They have been obtained by the original **funding_round_type**. Each of these variables measure the total amount of money received in the related funding round.\n\nThree binary variable have been created as well: \n\n- **person_financed**:  1 if the company have been financed at least one time by a phisical person, 0 otherwise.\n- **startup_financed**: 1 if the company have been financed at least one time by another company, 0 otherwise.\n- **fin_org_financed**: 1 if the company have been financed at least one time by a financial organization, 0 otherwise.\n\nWhen a split have to be computed on a decision tree, on a categorial variable having k levels, there are $2^{(k-1)}-1$ possible partitions of k values in two groups, and the computations could become prohibitive for high values of k. \n\nSo as to avoid these problems, the variables *country_code* e *category_code*, having respectively `r length(levels(finale_no_na$country_code))` and `r length(levels(finale_no_na$category_code))` levels, have neeb grouped in **macro_area** e **macro_sector**. \n**macro_area** gropus the countries `r length(levels(finale_no_na$macro_area))` geographic macro-regions and **macro_sector** groups the market sector in three macro-sectors: digital, technology e other. \n\n### Macro-sectors\n\nThe market sectors have been divided into three categories: **digital**, **technology** and **other**. This particular spilt have been executed, to assess wheter the startup in tech and digital field are actually **more successful** than the other. \n\nThe following table shows the number of companies and their *status* in the macro-sectors, while the barplot shows it graphically. \n\n```{r, include = TRUE, fig.width=10, fig.height=3}\nstatus_macrosettore <- finale_no_na %>%\n  group_by(macro_settore) %>%\n  summarise(n=n(), n_ipo=sum(status==\"ipo\"),\n            n_operating=sum(status==\"operating\"),\n            n_closed=sum(status==\"closed\"),\n            n_acquired=sum(status==\"acquired\")) %>%\n  mutate(ipo_rate=n_ipo/n*100, acquired_rate=n_acquired/n*100, \n         closed_rate=n_closed/n*100, operating_rate=n_operating/n*100) %>%\n  arrange(desc(n)) \n\nggtexttable(status_macrosettore, theme = ttheme(\"mOrange\"), rows = NULL)\n```\n\n```{r}\ncol1 <- c(rep(\"other\", 6665), rep(\"digital\", 6242), rep(\"technology\", 3991))\ncol2 <- c(rep(\"ipo\", 91), rep(\"operating\", 5781), rep(\"closed\", 287), rep(\"acquired\", 506),\n          rep(\"ipo\", 57), rep(\"operating\", 5045), rep(\"closed\", 508), rep(\"acquired\", 632), \n          rep(\"ipo\", 97), rep(\"operating\", 3422), rep(\"closed\", 192), rep(\"acquired\", 280))\n\nu <- as.data.frame(cbind(col1, col2))\nnames(u) <- c(\"macrosector\", \"status\")\n\n```\n\n```{r, include = TRUE}\n\nggplot(u, aes(x=macrosector, ..count.., fill = status)) + \n  geom_bar() + \n  theme(axis.text.x = element_text(angle=90, size = 10, vjust = 0.3)) \n```\n\nThe proportion of IPOs is grater for the tech sector, while it is lower for digital companies, which have an higher acquisition rate though. The companies failed more in the other sectors.\n\n## Macro-areas\n\n```{r, include = TRUE, fig.height=5, fig.width=10}\nstatus_macroregione <- finale_no_na %>%\n  group_by(macro_area) %>%\n  summarise(n=n(), n_ipo=sum(status==\"ipo\"),\n            n_operating=sum(status==\"operating\"),\n            n_closed=sum(status==\"closed\"),\n            n_acquired=sum(status==\"acquired\")) %>%\n  mutate(ipo_rate=n_ipo/n*100, acquired_rate=n_acquired/n*100, \n         closed_rate=n_closed/n*100, operating_rate=n_operating/n*100) %>%\n  arrange(desc(n))\n```\n\nCountries have been divided into **geographic areas**. The resulting variable is composed by `r length(levels(status_macroregione$country_code))` not orderable levels. Below there are data on *status* related to each region. \n\n```{r, include = TRUE, fig.height=5, fig.width=10}\nggtexttable(status_macroregione[-14,], theme = ttheme(\"mOrange\"), rows = NULL)\n```\n\n\n```{r}\n\na <- status_macroregione[,]\n\na <- within(a, macro_area <- factor(macro_area, levels=macro_area[order(ipo_rate, decreasing = TRUE)]))\n  \nuno <- ggplot(a,\n       aes(x=macro_area, y=c(ipo_rate))) + \n  geom_col() + \n  ylab(\"IPO rate\") +\n  xlab(\"\")+\n  theme(axis.text.x = element_text(angle=90, size = 13, vjust = 0.3), \n       axis.text.y = element_text(angle=90, size = 16, vjust = 0.3)) \n\ndue <- ggplot(a,\n       aes(x=macro_area, y=c(acquired_rate))) + \n  geom_col() +\n  xlab(\"\")+\n  ylab(\"Acquired rate\") +\n  theme(axis.text.x = element_text(angle=90, size = 13, vjust = 0.3), \n       axis.text.y = element_text(angle=90, size = 16, vjust = 0.3))\n\n```\n\n```{r}\n\ncol1 <- c(rep(\"NORTH AMERICA\", 12072), rep(\"NORTH EUROPE\", 1484), rep(\"WEST EUROPE\", 1094), rep(\"SOUTH EUROPE\", 397), rep(\"MIDDLE EAST\", 360), rep(\"SOUTH ASIA\", 321), rep(\"EAST ASIA\", 303), rep(\"SOUTH AMERICA\", 214), rep(\"SOUTH-EAST ASIA\", 182), rep(\"OCEANIA\", 154), rep(\"EAST ASIA\", 128), rep(\"NORTH ASIA (Russia)\", 107), rep(\"AFRICA\", 62), rep(\"CENTRAL AMERICA\", 20))\n\ncol2 <- c(rep(\"ipo\", 213), rep(\"operating\", 9979), rep(\"closed\", 695), rep(\"acquired\", 1185), \n              rep(\"ipo\", 6), rep(\"operating\", 1292), rep(\"closed\", 104), rep(\"acquired\", 82), \n              rep(\"ipo\", 6), rep(\"operating\", 973), rep(\"closed\", 50), rep(\"acquired\", 65),\n              rep(\"ipo\", 0), rep(\"operating\", 364), rep(\"closed\", 18), rep(\"acquired\", 15), \n              rep(\"ipo\", 3), rep(\"operating\", 296), rep(\"closed\", 29), rep(\"acquired\", 32),\n              rep(\"ipo\", 2), rep(\"operating\", 291), rep(\"closed\", 16), rep(\"acquired\", 12), \n              rep(\"ipo\", 13), rep(\"operating\", 261), rep(\"closed\", 21), rep(\"acquired\", 8), \n              rep(\"ipo\", 0), rep(\"operating\", 198), rep(\"closed\", 10), rep(\"acquired\", 6), \n              rep(\"ipo\", 0), rep(\"operating\", 163), rep(\"closed\", 15), rep(\"acquired\", 4), \n              rep(\"ipo\", 0), rep(\"operating\", 141), rep(\"closed\", 10), rep(\"acquired\", 3), \n              rep(\"ipo\", 1), rep(\"operating\", 119), rep(\"closed\", 5), rep(\"acquired\", 3), \n              rep(\"ipo\", 1), rep(\"operating\", 93), rep(\"closed\", 12), rep(\"acquired\", 1), \n              rep(\"ipo\", 0), rep(\"operating\", 60), rep(\"closed\", 1), rep(\"acquired\", 1), \n              rep(\"ipo\", 0), rep(\"operating\", 18), rep(\"closed\", 1), rep(\"acquired\", 1))\n\nu <- as.data.frame(cbind(macro_area = col1, status=col2)) %>%\n  mutate(macro_area = factor(macro_area), \n         status = factor(status))\n```\n\n```{r , include = TRUE, fig.width=18, fig.height=10}\n\ntre <- ggplot(u, aes(x=macro_area, ..count.., fill = status)) + \n  geom_bar(position = \"fill\") +\n  labs(y = \"proportions\", x=\"\") +\n  theme(axis.text.x = element_text(angle=90, size = 13, vjust = 0.3), \n       axis.text.y = element_text(angle=90, size = 16, vjust = 0.3)) \n\nstatus_macroregione$macro_area <- factor(status_macroregione$macro_area, levels = status_macroregione$macro_area[order(status_macroregione$n, decreasing = TRUE)])\n\nquattro <- ggplot(status_macroregione, aes(x=macro_area, y=n)) + \n  geom_col() + \n  labs(x=\"\", y=\"Number of companies\")+\n  theme(axis.text.x = element_text(angle=90, size = 13, vjust = 0.3), \n       axis.text.y = element_text(angle=90, size = 16, vjust = 0.3)) \n\nggarrange(uno, due, tre, quattro, ncol = 2, nrow = 2)\n\n```\n\nAs could have been guessed, most companies were founded in North America, which is also the first country for acquisition rate and the second one for IPO rate. Russia has the highest\nfailure rate. The highest IPO rate is in Estern Asia. \n\n\\ \n\n\n# Feature selection\n\nTo built the final unique dataset on which we will estimate the models, we chose the following variables: **status**, **category_code**, **founded_at**, **country_code**, **investment_round**, **invested_companies**, **funding_rounds**, **log_fund_tot**, **milestones**, **relationships**, **num_acquisizioni_effettuate**, **num_prodotti**, plus the variables introduced in the previous paragraph.\n\nThe final unique dataset, on which the statistical models will be estimated, is composed by `r nrow(finale_no_na)` observation on `r ncol(finale_no_na)` variables, of which `r ncol(Filter(is.factor, finale_no_na))` are categorial, `r ncol(Filter(is.numeric, finale_no_na))` are numeric and one in time format. There are no missing values (NA).\n\n# Data modelling \n\n## Class imbalance\n\nAs we can notice from the distribution of the dependent variable, this one is **strongly unbalanced** in favor of the class *operating*:\n\n```{r, include=TRUE}\ntable(finale_no_na$status)\n```\n\nThis can lead to some issues when it comes to classification, because most of the main popular algorithms tend to **underestimate the probability** that an observation belong to the \"rare\" class(es), when implemented on this kind of variables.\n\nSo as to avoid this issue, the following models have been estimated **100 times** on **sub-samples** of the main dataset, in which the observations in operating status have been **drawn without repetition**, in number equal to the **sum of the numbers of the other classes**(*ipo*, *acquired*, *closed*), in order to balance the frequencies. The **results** of the estimations have been than **summarized**.\n \n## Multinomial logit\n\nFor each sample, the **significance** of the coefficients estimated by the model was estimated. The multinomial logit have been then estimated again using only variables that have **at least one coefficient significant more than 80 times**. 8 performance metrics have been calculated for each status class. The class of reference is *ipo*.\n\n```{r, include = FALSE}\nset.seed(2)\n\nn_op_star <- sum(table(finale_no_na$status)[1:3])  #rare classes\nop_only <- finale_no_na %>%  \n  filter(status==\"operating\") \n\nn_sample <- 100\n\nres_coeff <- list()     #results lists initialization\nres_se <- list()\nconf_matrices <- list()\nres_pvalues <- list()\nres_metrics <- list()\nres_accuracy <- rep(0, n_sample)\nres_auc_status <- list()\nres_auc <- rep(0, n_sample)\n\n\n\nfor (i in 1:n_sample){\n  \n  op_idx <- sample(1:nrow(op_only), size=n_op_star,  #sub-sample indices\n                   replace = FALSE)\n  \n  selected_op <- op_only[op_idx,]     # predominant class sub-sample\n  \n  sub_sample <- finale_no_na%>%   #sample on which to estimate the model\n    filter(status!=\"operating\") %>%\n    add_row(selected_op)\n  \n  ##baseline class\n  sub_sample$status <- relevel(sub_sample$status, ref=\"ipo\")\n  \n  #model estimation\n  fit <- nnet::multinom(status~.-category_code-country_code, data=sub_sample) \n\n  \n  #coefficient significance verification\n  z <- summary(fit)$coefficients/summary(fit)$standard.errors\n  \n  p <- (1 - pnorm(abs(z), 0, 1)) * 2\n  p\n  \n  res_pvalues[[i]] <- p\n  \n  ## posterior class  probabilities estimation\n  hat_eta  <- predict(fit, type=\"probs\")\n  \n  ## bayesian classificator\n  hat_y <- apply(hat_eta , 1, which.max)\n  \n  \n  ## factor format classification \n  \n  hat_y <- factor( levels(sub_sample$status)[hat_y]  , ordered = FALSE)\n  hat_y <- factor(hat_y, levels=levels(sub_sample$status))\n  \n  conf_mat <- caret::confusionMatrix(hat_y, sub_sample$status)\n  \n  res_metrics[[i]] <- matrix(ncol = 7, nrow = 4)\n  colnames(res_metrics[[i]]) <- c(\"sensitivity\",\"specificity\",\"precision\",\"recall\",\n                                  \"F1\",\"balanced accuracy\",  \"FPR\")\n  rownames(res_metrics[[i]]) <- c(\"ipo\", \"acquired\", \"closed\", \"operating\")\n  \n  res_accuracy[i] <- sum(diag(conf_mat$table))/sum(conf_mat$table)   #accuracy\n  \n  res_metrics[[i]][,1] <- conf_mat$byClass[,1]                           #sensitivity \n  res_metrics[[i]][,2] <- conf_mat$byClass[,2]                           #specificity \n  res_metrics[[i]][,3] <- conf_mat$byClass[,5]                           #precision\n  res_metrics[[i]][,4] <- conf_mat$byClass[,6]                           #recall\n  res_metrics[[i]][,5] <- conf_mat$byClass[,7]                           #F1\n  res_metrics[[i]][,6] <- conf_mat$byClass[,11]                          #balanced accuracy\n  \n  FP <- c(sum(conf_mat$table[1,2:4]), \n          sum(conf_mat$table[2,c(1,3,4)]), \n          sum(conf_mat$table[3,c(1,2,4)]),\n          sum(conf_mat$table[4,1:3]))\n\n  \n  N_ipo <- sum(conf_mat$table[,2:4])     \n  N_acquired <- sum(conf_mat$table[,c(1,3,4)])\n  N_closed <- sum(conf_mat$table[,c(1,2,4)])\n  N_operating <- sum(conf_mat$table[,1:3])\n  \n  N <- c(N_ipo, N_acquired, N_closed, N_operating)\n  \n  res_metrics[[i]][,7] <- FP/N\n  \n  \n  \n  modelroc = mean(\n    c(as.numeric(multiclass.roc(sub_sample$status, hat_eta[,1])$auc),    \n      as.numeric(multiclass.roc(sub_sample$status, hat_eta[,2])$auc),\n      as.numeric(multiclass.roc(sub_sample$status, hat_eta[,3])$auc),\n      as.numeric(multiclass.roc(sub_sample$status, hat_eta[,4])$auc)\n    )\n  )\n  \n  res_auc_status[[i]] <- matrix(nrow=4)\n  rownames(res_metrics[[i]]) <- c(\"ipo\", \"acquired\", \"closed\", \"operating\")\n  \n  res_auc_status[[i]][1,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,1])$auc)\n  res_auc_status[[i]][2,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,2])$auc)\n  res_auc_status[[i]][3,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,3])$auc)\n  res_auc_status[[i]][4,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,4])$auc)\n  \n  res_auc[i] <- modelroc\n  \n  \n  #results lists insertion\n  res_coeff[[i]] <- coef(fit)\n  res_se[[i]] <- summary(fit)$standard.errors\n  conf_matrices[[i]] <- conf_mat$table\n  \n  cat(i, \"iterazione\", \"\\n\")\n  print(date())\n}\n\nres_matrix<- matrix(0, nrow=7, ncol=n_sample)\nrownames(res_matrix) <- colnames(res_metrics[[1]])\nfor(i in 1:n_sample){\n  for(j in 1:7){\n    res_matrix[j,i] <- mean(res_metrics[[i]][,j])\n  }\n}\n\n\n#############################################################################################\n# counting matrix building (for the significance of the estimated coefficients)\ncoeff_sign_count <- matrix(0, ncol=ncol(res_pvalues[[1]]), nrow = nrow(res_pvalues[[1]])) \n\nrownames(coeff_sign_count) <- rownames(res_pvalues[[1]])\ncolnames(coeff_sign_count) <- colnames(res_pvalues[[1]])\n\nfor (l in 1:100){\n  \n  for (r in 1:nrow(res_pvalues[[1]])){\n    \n    for (c in 1:ncol(res_pvalues[[1]])){\n      \n      if (!is.na(res_pvalues[[l]][r,c]) & res_pvalues[[l]][r,c]<0.05){   \n        \n        # if p-value is lower than 0.05, the coefficient is considered significant and the counter is increased by 1\n        \n        coeff_sign_count[r,c] <- coeff_sign_count[r,c] + 1\n      }\n    }\n  }\n  \n}\n\nn <- rownames(coeff_sign_count)\n\ncoeff_sign_count2 <- as.matrix(cbind(coeff_sign_count[1,], coeff_sign_count[2,],coeff_sign_count[3,]))\ncolnames(coeff_sign_count2) <- n\n\n\n############################----------------------------------------------------------------\ncoeff_sign_count2_logit <- coeff_sign_count2[,]\nres_coeff_logit <- res_coeff[1:100]    \nres_se_logit <- res_se[1:100]     \nres_pvalues_logit <- res_pvalues[1:100]  \nconf_matrices_logit <- conf_matrices[1:100]\nres_metrics_logit <- res_metrics[1:100]  \nres_accuracy_logit <- res_accuracy[]\nres_auc_status_logit <- res_auc_status[1:100]\nres_auc_logit <- res_auc[]\nres_matrix_logit <- res_matrix[,]\n```\n\n```{r, include=FALSE}\nset.seed(2)\n\n\nvariabili <- c(colnames(coeff_sign_count[,2:7]),\"crowdfunding\", \"other\", \"venture\", \n               \"num_acquisizioni_effettuate\", \"fin_org_financed\", \"person_financed\", \n               \"startup_financed\", \"num_prodotti\", \"log_fund_tot\", \"macro_area\", \"macro_settore\", \"status\", \"country_code\", \"category_code\")\n\n\n\nn_op_star <- sum(table(finale_no_na$status)[1:3])  #rare class\nop_only <- finale_no_na[,variabili] %>%  \n  filter(status==\"operating\") \n\nn_sample <- 100\n\nres_coeff2 <- list()     #results lists initialization\nres_se2 <- list()\nconf_matrices2 <- list()\nres_pvalues2 <- list()\nres_metrics2 <- list()\nres_accuracy2 <- rep(0, n_sample)\nres_auc_status2 <- list()\nres_auc2 <- rep(0, n_sample)\n\n\n\nfor (i in 1:n_sample){\n  \n  op_idx <- sample(1:nrow(op_only), size=n_op_star,  #sub-sample indices\n                   replace = FALSE)\n  \n  selected_op <- op_only[op_idx,]     # predominant class sub-sample\n  \n  sub_sample <- finale_no_na[,variabili]%>%   #sample on which to estimate the model\n    filter(status!=\"operating\") %>%\n    add_row(selected_op)\n  \n  ##baseline class\n  sub_sample$status <- relevel(sub_sample$status, ref=\"ipo\")\n  \n  #model estimation\n  fit <- nnet::multinom(status~.-category_code-country_code, data=sub_sample) \n \n  # coefficients significance verification\n  z <- summary(fit)$coefficients/summary(fit)$standard.errors\n  \n  p <- (1 - pnorm(abs(z), 0, 1)) * 2\n  p\n  \n  res_pvalues2[[i]] <- p\n  \n  ## posterior class  probabilities estimation\n  hat_eta  <- predict(fit, type=\"probs\")\n  \n  ## bayesian classificator\n  hat_y <- apply(hat_eta , 1, which.max)\n  \n  \n  ## factor format classification \n  \n  hat_y <- factor( levels(sub_sample$status)[hat_y]  , ordered = FALSE)\n  hat_y <- factor(hat_y, levels=levels(sub_sample$status))\n \n  conf_mat <- caret::confusionMatrix(hat_y, sub_sample$status)\n  \n  res_metrics2[[i]] <- matrix(ncol = 7, nrow = 4)\n  colnames(res_metrics2[[i]]) <- c(\"sensitivity\",\"specificity\",\"precision\",\"recall\",\n                                   \"F1\",\"balanced accuracy\",  \"FPR\")\n  rownames(res_metrics2[[i]]) <- c(\"ipo\", \"acquired\", \"closed\", \"operating\")\n  \n  res_accuracy2[i] <- sum(diag(conf_mat$table))/sum(conf_mat$table)   #accuracy\n  \n  \n  res_metrics2[[i]][,1] <- conf_mat$byClass[,1]                           #sensitivity \n  res_metrics2[[i]][,2] <- conf_mat$byClass[,2]                           #specificity \n  res_metrics2[[i]][,3] <- conf_mat$byClass[,5]                           #precision\n  res_metrics2[[i]][,4] <- conf_mat$byClass[,6]                           #recall\n  res_metrics2[[i]][,5] <- conf_mat$byClass[,7]                           #F1\n  res_metrics2[[i]][,6] <- conf_mat$byClass[,11]                          #balanced accuracy \n  FP <- c(sum(conf_mat$table[1,2:4]), \n          sum(conf_mat$table[2,c(1,3,4)]), \n          sum(conf_mat$table[3,c(1,2,4)]),\n          sum(conf_mat$table[4,1:3]))\n \n  \n  N_ipo <- sum(conf_mat$table[,2:4])     \n  N_acquired <- sum(conf_mat$table[,c(1,3,4)])\n  N_closed <- sum(conf_mat$table[,c(1,2,4)])\n  N_operating <- sum(conf_mat$table[,1:3])\n  \n  N <- c(N_ipo, N_acquired, N_closed, N_operating)\n  \n  res_metrics2[[i]][,7] <- FP/N\n  \n  \n  modelroc = mean(\n    c(as.numeric(multiclass.roc(sub_sample$status, hat_eta[,1])$auc),     \n      as.numeric(multiclass.roc(sub_sample$status, hat_eta[,2])$auc),\n      as.numeric(multiclass.roc(sub_sample$status, hat_eta[,3])$auc),\n      as.numeric(multiclass.roc(sub_sample$status, hat_eta[,4])$auc)\n    )\n  )\n  \n  res_auc_status2[[i]] <- matrix(nrow=4)\n  rownames(res_metrics2[[i]]) <- c(\"ipo\", \"acquired\", \"closed\", \"operating\")\n  \n  res_auc_status2[[i]][1,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,1])$auc)\n  res_auc_status2[[i]][2,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,2])$auc)\n  res_auc_status2[[i]][3,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,3])$auc)\n  res_auc_status2[[i]][4,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,4])$auc)\n  \n  res_auc2[i] <- modelroc\n  \n  #results lists insertion\n  res_coeff2[[i]] <- coef(fit)\n  res_se2[[i]] <- summary(fit)$standard.errors\n  conf_matrices2[[i]] <- conf_mat$table\n  \n  cat(i, \"iterazione\", \"\\n\")\n}\n\nres_matrix2 <- matrix(0, nrow=7, ncol=n_sample)\nrownames(res_matrix2) <- colnames(res_metrics2[[1]])\nfor(i in 1:n_sample){\n  for(j in 1:7){\n    res_matrix2[j,i] <- mean(res_metrics2[[i]][,j])\n  }\n}\n\n#############################################################################################\n# counting matrix building (for the significance of estimated coefficients)\ncoeff_sign_count <- matrix(0, ncol=ncol(res_pvalues2[[1]]), nrow = nrow(res_pvalues2[[1]])) \n\nrownames(coeff_sign_count) <- rownames(res_pvalues2[[1]])\ncolnames(coeff_sign_count) <- colnames(res_pvalues2[[1]])\n\nfor (l in 1:100){\n  \n  for (r in 1:nrow(res_pvalues2[[1]])){\n    \n    for (c in 1:ncol(res_pvalues2[[1]])){\n      \n      if (!is.na(res_pvalues2[[l]][r,c]) & res_pvalues2[[l]][r,c]<0.05){   \n        \n        # se il p-value √® minore di 0.05 il coefficiente viene considerato significativo e si incrementa il \n        # contatore di 1\n        \n        # if p-value is lower than 0.05, the coefficient is considered significant and the counter is increased by 1\n        \n        coeff_sign_count[r,c] <- coeff_sign_count[r,c] + 1\n      }\n    }\n  }\n  \n}\n\nn <- rownames(coeff_sign_count)\n\ncoeff_sign_count2_2 <- as.matrix(cbind(coeff_sign_count[1,],\n                                       coeff_sign_count[2,],coeff_sign_count[3,]))\ncolnames(coeff_sign_count2_2) <- n\n\n\n```\n\n\nAn **average of each metric** on the four classes have been calculated and below are shown the **distributions** for the models estimated on the dataset with **all the variables** (in orange) and on the dataset with **only significant variables** (in white). \n\n```{r, fig.width=20, fig.height=7}\n\n###Performance metrics distribution\n\n#AUC \nauc1_logit<- ggplot(as.data.frame(res_auc_logit), aes(x=res_auc_logit))+\n  geom_boxplot(fill = \"orange\") + \n  labs(title=\"AUC\", subtitle = \"Area Under Curve\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nauc2_logit <- ggtexttable(rbind(c(round(summary(res_auc_logit), 3), sd=round(sd(res_auc_logit), 3))), \n                          theme = ttheme(\"mOrange\"))\n\nareauc_logit <- ggarrange(auc1_logit, auc2_logit, ncol=1)\n\n#accuracy\nacc1_logit<- ggplot(as.data.frame(res_accuracy_logit), aes(x=res_accuracy_logit))+\n  geom_boxplot(fill = \"orange\") + \n  labs(title=\"Accuracy\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nacc2_logit <- ggtexttable(rbind(c(round(summary(res_accuracy_logit), 3), sd=round(sd(res_accuracy_logit), 3))), \n                          theme = ttheme(\"mOrange\"))\n\nacc_logit <- ggarrange(acc1_logit, acc2_logit,ncol=1)\n\n#sensitivity\nsens1_logit<- ggplot(as.data.frame(res_matrix_logit[1,]), aes(x=res_matrix_logit[1,]))+\n  geom_boxplot(fill = \"orange\") + \n  labs(title=\"Sensitivity\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nsens2_logit <- ggtexttable(rbind(c(round(summary(res_matrix_logit[1,]), 3), sd=round(sd(res_matrix_logit[1,]), 3))), \n                          theme = ttheme(\"mOrange\"))\n\nsens_logit <- ggarrange(sens1_logit, sens2_logit, ncol=1)\n\n#specificity\nspec1_logit<- ggplot(as.data.frame(res_matrix_logit[2,]), aes(x=res_matrix_logit[2,]))+\n  geom_boxplot(fill = \"orange\") + \n  labs(title=\"Specificity\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nspec2_logit <- ggtexttable(rbind(c(round(summary(res_matrix_logit[2,]), 3), sd=round(sd(res_matrix_logit[2,]), 3))), \n                          theme = ttheme(\"mOrange\"))\n\nspecif_logit <- ggarrange(spec1_logit, spec2_logit, ncol=1)\n\n#precision\nprec1_logit<- ggplot(as.data.frame(res_matrix_logit[3,]), aes(x=res_matrix_logit[3,]))+\n  geom_boxplot(fill = \"orange\") + \n  labs(title=\"Precision\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nprec2_logit <- ggtexttable(rbind(c(round(summary(res_matrix_logit[3,]), 3), sd=round(sd(res_matrix_logit[3,]), 3))), \n                          theme = ttheme(\"mOrange\"))\n\nprec_logit <- ggarrange(prec1_logit, prec2_logit, ncol=1)\n\n\n#F1\nf1_1_logit<- ggplot(as.data.frame(res_matrix_logit[5,]), aes(x=res_matrix_logit[5,]))+\n  geom_boxplot(fill = \"orange\") + \n  labs(title=\"F1\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nf1_2_logit <- ggtexttable(rbind(c(round(summary(res_matrix_logit[5,]), 3), sd=round(sd(res_matrix_logit[5,]), 3))), \n                          theme = ttheme(\"mOrange\"))\n\nf1_logit <- ggarrange(f1_1_logit,f1_2_logit, ncol=1)\n\n#balanced accuracy\nbacc1_logit<- ggplot(as.data.frame(res_matrix_logit[6,]), aes(x=res_matrix_logit[6,]))+\n  geom_boxplot(fill = \"orange\") + \n  labs(title=\"Balanced Accuracy\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nbacc2_logit <- ggtexttable(rbind(c(round(summary(res_matrix_logit[6,]), 3), sd=round(sd(res_matrix_logit[6,]), 3))), \n                          theme = ttheme(\"mOrange\"))\n\nbacc_logit <- ggarrange(bacc1_logit,bacc2_logit, ncol=1) \n\n#FPR\nfpr1_logit<- ggplot(as.data.frame(res_matrix_logit[7,]), aes(x=res_matrix_logit[7,]))+\n  geom_boxplot(fill = \"orange\") + \n  labs(title=\"False Positive Rate\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nfpr2_logit <- ggtexttable(rbind(c(round(summary(res_matrix_logit[7,]), 3), sd=round(sd(res_matrix_logit[7,]), 3))), \n                          theme = ttheme(\"mOrange\"))\n\nfpr_logit <- ggarrange(fpr1_logit,fpr2_logit, ncol=1)\n\n\n\n```\n\n```{r, fig.width=13, fig.height=8}\n###### Performance metrics distribution\n\n#AUC \nauc1_2<- ggplot(as.data.frame(res_auc2), aes(x=res_auc2))+\n  geom_boxplot() + \n  labs(title=\"AUC\", subtitle = \"Area Under Curve\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nauc2_2 <- ggtexttable(rbind(c(round(summary(res_auc2), 3), sd=round(sd(res_auc2), 3))))\n\nareauc2 <- ggarrange(auc1_2, auc2_2, ncol=1)\n\n#accuracy\nacc1_2<- ggplot(as.data.frame(res_accuracy2), aes(x=res_accuracy2))+\n  geom_boxplot() + \n  labs(title=\"Accuracy\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nacc2_2 <- ggtexttable(rbind(c(round(summary(res_accuracy2), 3), sd=round(sd(res_accuracy2), 3))))\n\nacc2 <- ggarrange(acc1_2, acc2_2,ncol=1)\n\n#sensitivity\nsens1_2<- ggplot(as.data.frame(res_matrix2[1,]), aes(x=res_matrix2[1,]))+\n  geom_boxplot() + \n  labs(title=\"Sensitivity\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nsens2_2 <- ggtexttable(rbind(c(round(summary(res_matrix2[1,]), 3), sd=round(sd(res_matrix2[1,]), 3))))\n\nsens2 <- ggarrange(sens1_2, sens2_2, ncol=1)\n\n#specificity\nspec1_2<- ggplot(as.data.frame(res_matrix2[2,]), aes(x=res_matrix2[2,]))+\n  geom_boxplot() + \n  labs(title=\"Specificity\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nspec2_2 <- ggtexttable(rbind(c(round(summary(res_matrix2[2,]), 3), sd=round(sd(res_matrix2[2,]), 3))))\n\nspecif2 <- ggarrange(spec1_2, spec2_2, ncol=1)\n\n#precision\nprec1_2<- ggplot(as.data.frame(res_matrix2[3,]), aes(x=res_matrix2[3,]))+\n  geom_boxplot() + \n  labs(title=\"Precision\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nprec2_2 <- ggtexttable(rbind(c(round(summary(res_matrix2[3,]), 3), sd=round(sd(res_matrix2[3,]), 3))))\n\nprec2 <- ggarrange(prec1_2, prec2_2, ncol=1)\n\n#F1\nf1_1_2<- ggplot(as.data.frame(res_matrix2[5,]), aes(x=res_matrix2[5,]))+\n  geom_boxplot() + \n  labs(title=\"F1\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nf1_2_2 <- ggtexttable(rbind(c(round(summary(res_matrix2[5,]), 3), sd=round(sd(res_matrix2[5,]), 3))))\n\nf1_2 <- ggarrange(f1_1_2,f1_2_2, ncol=1)\n\n#balanced accuracy\nbacc1_2<- ggplot(as.data.frame(res_matrix2[6,]), aes(x=res_matrix2[6,]))+\n  geom_boxplot() + \n  labs(title=\"Balanced Accuracy\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nbacc2_2 <- ggtexttable(rbind(c(round(summary(res_matrix2[6,]), 3), sd=round(sd(res_matrix2[6,]), 3))))\n\nbacc2 <- ggarrange(bacc1_2,bacc2_2, ncol=1) \n\n#FPR\nfpr1_2<- ggplot(as.data.frame(res_matrix2[7,]), aes(x=res_matrix2[7,]))+\n  geom_boxplot() + \n  labs(title=\"False Positive Rate\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank()) \n\nfpr2_2 <- ggtexttable(rbind(c(round(summary(res_matrix2[7,]), 3), sd=round(sd(res_matrix2[7,]), 3))))\n\nfpr2<- ggarrange(fpr1_2,fpr2_2, ncol=1)\n```\n\n```{r, fig.height=3, fig.width=15}\n\n# accuratezza\nacc_tot <- ggarrange(ggarrange(acc1_logit, acc2_logit, ncol=2), \n                     ggarrange(acc1_2, acc2_2, ncol = 2), ncol = 1)\n# specificity\nspec_tot <- ggarrange(ggarrange(spec1_logit, spec2_logit, ncol=2), \n                     ggarrange(spec1_2, spec2_2, ncol = 2), ncol = 1)\n# sensitivity\nsens_tot <- ggarrange(ggarrange(sens1_logit, sens2_logit, ncol=2), \n                     ggarrange(sens1_2, sens2_2, ncol = 2), ncol = 1)\n# f-scor\nf1_tot <- ggarrange(ggarrange(f1_1_logit, f1_2_logit, ncol=2), \n                     ggarrange(f1_1_2, f1_2_2, ncol = 2), ncol = 1)\n# precisione\nprec_tot <- ggarrange(ggarrange(prec1_logit, prec2_logit, ncol=2), \n                     ggarrange(prec1_2, prec2_2, ncol = 2), ncol = 1)\n# fpr\nfpr_tot <- ggarrange(ggarrange(fpr1_logit, fpr2_logit, ncol=2), \n                     ggarrange(fpr1_2, fpr2_2, ncol = 2), ncol = 1)\n# auc\nauc_tot <- ggarrange(ggarrange(auc1_logit, auc2_logit, ncol=2), \n                     ggarrange(auc1_2, auc2_2, ncol = 2), ncol = 1)\n\n# accuratezza bilanciata\nbacc_tot <- ggarrange(ggarrange(bacc1_logit, bacc2_logit, ncol=2), \n                     ggarrange(bacc1_2, bacc2_2, ncol = 2), ncol = 1)\n```\n\n```{r, fig.height=30, fig.width=20, include = TRUE}\nggarrange(ggarrange(ggarrange(acc_tot, spec_tot, ncol = 1), \n          ggarrange(sens_tot, f1_tot, ncol = 1), ncol=1),\n          ggarrange(ggarrange(prec_tot, fpr_tot, ncol = 1), \n          ggarrange(auc_tot, bacc_tot, ncol = 1), ncol=1), ncol = 1)\n```\n\nThe model with significant variables is better only for **accuracy** and **Area Under Curve**, while the model with significant variables performs better for all other metrics.\n\n\n\n### Coefficients\n\nThe following table shows the **average of the coefficients** estimated on 100 models. NA's correspond to non-significant coefficients. \n\n```{r}\n\ncoeff_mean2 <- matrix(NA, nrow = nrow(coeff_sign_count2_2), ncol = ncol(coeff_sign_count2_2))\n\ncolnames(coeff_mean2) <- colnames(coeff_sign_count2_2)\nrownames(coeff_mean2) <- rownames(coeff_sign_count2_2)\n\nfor (r in 1:nrow(coeff_sign_count2_2)){\n  for (c in 1:ncol(coeff_sign_count2_2)){\n    if (coeff_sign_count2_2[r,c]>85){\n      \n      coefficienti <- rep(0, length(res_coeff2))\n      for (l in 1:length(res_coeff2)){\n        coefficienti[l] <- round(res_coeff2[[l]][c, r], 3)\n      }\n      coeff_mean2[r, c] <- round(mean(coefficienti),3)\n    }\n  }\n}\n\nif (rownames(coeff_mean2)[1]==\"(Intercept)\"){\n  coeff_mean2 <- coeff_mean2[-1,]\n}\n```\n\n\n```{r, fig.width=10, fig.height=6, include = TRUE}\nb <- floor(nrow(coeff_mean2)/2)\nc <- floor(nrow(coeff_mean2)/2)+1\n\nuno <- ggtexttable(coeff_mean2[1:b,])  \ndue <- ggtexttable(coeff_mean2[c:nrow(coeff_mean2),])\n\ncoefficienti <- ggarrange(uno, due, ncol=2)\n\ncoefficienti\n\n```\n\nThe coefficients indicate the **impact on the logarithm of the odds ratio** compared to the **ipo** class, following a unit increase (for numeric variables) or the presenct in a certain group (for categorial variables), all other factor being equal. \n\nThe coefficients are all relatively low. In fact, only one is greater than 1, that of ***fin_org_financed1*** for the *acquired* class. This means that receiving funding from financial organisations greatly increases the probability of the company being acquired compared to the probability of going public. \n\n***other*** and ***venture** can be considered non-significant as in two classes the coefficients are not significant and for the other class the value is close to 0 (the values in the table are approximated to the third decimal place).\n\nGeographical region and market sector influence company status. \nIn particular it can be seen that being in **North America** increases the probability of acquisition and decreases the probability of *closed* and *operating*. The same applies to **Central America**. \nIn **Oceania**, **North Asia** and **Southeast Asia**, the probability of closing increases while the others decrease. We can consider these areas as the worst for founding a startup for this reason. **Northern Europe** also has a relatively high *closed* coefficient, as does the Middle East**.\n\nThe opposite is true for **Western Europe**, **Southern Europe**, **Southern America** and **Southern Asia**, where the chances of closing decrease and the others increase.\n\nBeing in **East Asia** increases the probability of IPOs at the expense of all other classes. \n\nThe coefficients for the **technology** sector and the other sectors (**other**) are almost all negative, although those for the technology sector are smaller. This means that being in this sector increases the probability of the firm reaching IPO, more than being in other sectors (the negative impact on log-odds is greater).\n\nWe can extract important information from the coefficients of **investment_rounds**, **invested_companies**, **funding_rounds**, **milestones**, **relationships**, **num_acquisitions**. In fact, they are all negative, indicating that an increase in these variables leads to a decrease in log-odds, hence an increase in the relative probability of reaching the IPO. In particular, the number of milestones, relationships and acquisitions made have a stronger impact on the logarithm of the odds ratio than the other variables, as they have higher coefficients than the others in absolute value. \n\nIt is interesting to note that, counterintuitively, as the number of products launched on the market increases (**num_products**), the probability of IPO decreases and the probability of closing increases more than the others. The same applies to receiving funding from individuals, financial organisations or startups, although for the latter the coefficient associated with *closed* is negative. \n\n\\ \n\n## Random Forests\n\n```{r forests, include =FALSE}\n\nset.seed(2)\n\nn_op_star <- sum(table(finale_no_na$status)[1:3])  #rare classes\n\nop_only <- finale_no_na %>%   \n  filter(status==\"operating\") \n\nn_sample <- 100  \n\n\nres_variables <- list()     #results lists initialization\nres_matrices <- list()\nres_metrics <- list()\nres_accuracy <- rep(0, 100)\nres_auc_status <- list()\nres_auc <- rep(0, n_sample)\nres_importance <- list()\n\n\nfor (i in 1:n_sample){\n  \n  op_idx <- sample(1:nrow(op_only), size=n_op_star,  #sub-sample indices\n                   replace = FALSE)\n  \n  selected_op <- op_only[op_idx,]     # predominant class sub-sample\n  \n  sub_sample <- finale_no_na %>%   #sample on which estimate the model\n    filter(status!=\"operating\") %>%\n    add_row(selected_op) \n  \n  \n  #model estimation\n  fit <- randomForest::randomForest(status~.-country_code, data = sub_sample[,-1], \n                                    importance = TRUE, ntree = 500) \n  \n  \n  \n  #variable importance\n  res_importance[[i]] <- randomForest::importance(fit)\n  \n  ## in-sample classification\n  hat_y <- predict(fit, sub_sample[,-1], type = \"class\")\n  \n  hat_eta <- predict(fit, sub_sample[,-1], type = \"prob\")\n  \n  # confusion matrix\n  conf_mat <- caret::confusionMatrix(hat_y, sub_sample[,-1]$status)\n  \n  \n  # performance metrics computation\n  res_metrics[[i]] <- matrix(ncol =  7, nrow = 4)\n  colnames(res_metrics[[i]]) <- c(\"sensitivity\",\"specificity\",\"precision\",\"recall\",\n                                  \"F1\",\"balanced accuracy\", \"FPR\")\n  rownames(res_metrics[[i]]) <- c(\"acquired\", \"closed\", \"ipo\", \"operating\")\n  \n  res_accuracy[i] <- sum(diag(conf_mat$table))/sum(conf_mat$table)   #accuracy\n  \n  res_metrics[[i]][,1] <- conf_mat$byClass[,1]                           #sensitivity \n  res_metrics[[i]][,2] <- conf_mat$byClass[,2]                           #specificity \n  res_metrics[[i]][,3] <- conf_mat$byClass[,5]                           #precision\n  res_metrics[[i]][,4] <- conf_mat$byClass[,6]                           #recall\n  res_metrics[[i]][,5] <- conf_mat$byClass[,7]                           #F1\n  res_metrics[[i]][,6] <- conf_mat$byClass[,11]                          #balanced accuracy \n  FP <- c(sum(conf_mat$table[1,2:4]), \n          sum(conf_mat$table[2,c(1,3,4)]), \n          sum(conf_mat$table[3,c(1,2,4)]),\n          sum(conf_mat$table[4,1:3]))\n \n  \n  N_ipo <- sum(conf_mat$table[,2:4])     \n  N_acquired <- sum(conf_mat$table[,c(1,3,4)])\n  N_closed <- sum(conf_mat$table[,c(1,2,4)])\n  N_operating <- sum(conf_mat$table[,1:3])\n  \n  N <- c(N_ipo, N_acquired, N_closed, N_operating)\n  \n  res_metrics[[i]][,7] <- FP/N\n \n  \n  modelroc = mean(\n    c(as.numeric(multiclass.roc(sub_sample$status, hat_eta[,1])$auc),     \n      as.numeric(multiclass.roc(sub_sample$status, hat_eta[,2])$auc),\n      as.numeric(multiclass.roc(sub_sample$status, hat_eta[,3])$auc),\n      as.numeric(multiclass.roc(sub_sample$status, hat_eta[,4])$auc)\n    )\n  )\n  \n  res_auc_status[[i]] <- matrix(nrow=4)\n  rownames(res_metrics[[i]]) <- c(\"ipo\", \"acquired\", \"closed\", \"operating\")\n  \n  res_auc_status[[i]][1,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,1])$auc)\n  res_auc_status[[i]][2,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,2])$auc)\n  res_auc_status[[i]][3,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,3])$auc)\n  res_auc_status[[i]][4,] <- as.numeric(multiclass.roc(sub_sample$status, hat_eta[,4])$auc)\n  \n  res_auc[i] <- modelroc\n  \n  \n  \n  #results lists insertion  \n  res_matrices[[i]] <- conf_mat$table\n\n}\n\n\n\nres_matrix <- matrix(0, nrow=7, ncol=n_sample)\nrownames(res_matrix) <- colnames(res_metrics[[1]])\nfor(i in 1:n_sample){\n  for(j in 1:7){\n    res_matrix[j,i] <- mean(res_metrics[[i]][,j])\n  }\n}\n\n\n#### variable importance\nres_importance_mean <- matrix(0, ncol = ncol(res_importance[[1]]),\n                              nrow = nrow(res_importance[[1]]))\n\ncolnames(res_importance_mean) <- colnames(res_importance[[1]])\nrownames(res_importance_mean) <- rownames(res_importance[[1]])\n\nfor(r in 1:nrow(res_importance[[1]])){\n  for(c in 1:ncol(res_importance[[1]])){\n    valori <- rep(0, length(res_importance))\n    for (l in 1:length(res_importance)){\n      valori[l] <- res_importance[[l]][r,c]\n    }\n    res_importance_mean[r,c] <- mean(valori)\n  }\n}\n\nres_importance_mean <- as.data.frame(res_importance_mean)\n\nres_importance_mean$variabili <- rownames(res_importance_mean)\n\n\n\nres_auc_forest <- res_auc[]\nres_accuracy_forest <- res_accuracy[]\nres_matrix_forest <- res_matrix[,]\nres_matrices_forest <- res_matrices[1:100]    \nres_metrics_forest <- res_metrics[1:100]    \n\n```\n\n`r fit$ntree` **boostrapped samples** have been drawn for each sub-sample, on each of which a decision tree has been built with `r fit$mtry` variables, randomly drawn from the set of `r ncol(finale_no_na)` predictors, each time for each tree. All variables have been condidered. \n\nBelow is the distribution of the performance metrics calculated on **100 confusion matrices** generated. \n\n```{r , fig.width=20, fig.height=7}\n##### Performance metrics distribution\n#AUC \nauc1_forest<- ggplot(as.data.frame(res_auc_forest), aes(x=res_auc_forest))+\n  geom_boxplot() + \n  labs(title=\"AUC\", subtitle = \"Area Under Curve\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nauc2_forest <- ggtexttable(rbind(c(round(summary(res_auc_forest), 3), sd=round(sd(res_auc_forest), 3))))\n\nareauc_forest <- ggarrange(auc1_forest, auc2_forest, ncol=2)\n\n#accuracy\nacc1_forest<- ggplot(as.data.frame(res_accuracy_forest), aes(x=res_accuracy_forest))+\n  geom_boxplot() + \n  labs(title=\"Accuracy\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nacc2_forest <- ggtexttable(rbind(c(round(summary(res_accuracy_forest), 3), sd=round(sd(res_accuracy_forest), 3))))\n\nacc_forest <- ggarrange(acc1_forest, acc2_forest,ncol=1)\n\n#sensitivity\nsens1_forest<- ggplot(as.data.frame(res_matrix_forest[1,]), aes(x=res_matrix_forest[1,]))+\n  geom_boxplot() + \n  labs(title=\"Sensitivity\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nsens2_forest <- ggtexttable(rbind(c(round(summary(res_matrix_forest[1,]), 3), sd=round(sd(res_matrix_forest[1,]), 3))))\n\nsens_forest <- ggarrange(sens1_forest, sens2_forest, ncol=2)\n\n#specificity\nspec1_forest<- ggplot(as.data.frame(res_matrix_forest[2,]), aes(x=res_matrix_forest[2,]))+\n  geom_boxplot() + \n  labs(title=\"Specificity\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nspec2_forest <- ggtexttable(rbind(c(round(summary(res_matrix_forest[2,]), 3), sd=round(sd(res_matrix_forest[2,]), 3))))\n\nspecif_forest <- ggarrange(spec1_forest, spec2_forest, ncol=2)\n\n#precision\nprec1_forest<- ggplot(as.data.frame(res_matrix_forest[3,]), aes(x=res_matrix_forest[3,]))+\n  geom_boxplot() + \n  labs(title=\"Precision\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nprec2_forest <- ggtexttable(rbind(c(round(summary(res_matrix_forest[3,]), 3), sd=round(sd(res_matrix_forest[3,]), 3))))\n\nprec_forest <- ggarrange(prec1_forest, prec2_forest, ncol=2)\n\n#recall\nrec1_forest<- ggplot(as.data.frame(res_matrix_forest[4,]), aes(x=res_matrix_forest[4,]))+\n  geom_boxplot() + \n  labs(title=\"Recall\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nrec2_forest <- ggtexttable(rbind(c(round(summary(res_matrix_forest[4,]), 3), sd=round(sd(res_matrix_forest[4,]), 3))))\n\nrec_forest <- ggarrange(rec1_forest,rec2_forest, ncol=2)\n\n#F1\nf1_1_forest<- ggplot(as.data.frame(res_matrix_forest[5,]), aes(x=res_matrix_forest[5,]))+\n  geom_boxplot() + \n  labs(title=\"F1\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nf1_2_forest <- ggtexttable(rbind(c(round(summary(res_matrix_forest[5,]), 3), sd=round(sd(res_matrix_forest[5,]), 3))))\n\nf1_forest <- ggarrange(f1_1_forest,f1_2_forest, ncol=2)\n\n#balanced accuracy\nbacc1_forest<- ggplot(as.data.frame(res_matrix_forest[6,]), aes(x=res_matrix_forest[6,]))+\n  geom_boxplot() + \n  labs(title=\"Balanced Accuracy\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nbacc2_forest <- ggtexttable(rbind(c(round(summary(res_matrix_forest[6,]), 3), sd=round(sd(res_matrix_forest[6,]), 3))))\n\nbacc_forest <- ggarrange(bacc1_forest,bacc2_forest, ncol=2) \n\n#FPR\nfpr1_forest<- ggplot(as.data.frame(res_matrix_forest[7,]), aes(x=res_matrix_forest[7,]))+\n  geom_boxplot() + \n  labs(title=\"False Positive Rate\", x=\"\")+\n  theme(axis.title.y=element_blank(),\n        axis.text.y=element_blank(),\n        axis.ticks.y=element_blank())\nfpr2_forest <- ggtexttable(rbind(c(round(summary(res_matrix_forest[7,]), 3), sd=round(sd(res_matrix_forest[7,]), 3))))\n\nfpr_forest <- ggarrange(fpr1_forest,fpr2_forest, ncol=2)\n```\n\n```{r , include = TRUE, fig.width = 15}\n\nareauc_forest\nsens_forest\nspecif_forest\nprec_forest\nacc_forest\nf1_forest\nbacc_forest\nfpr_forest\n        \n```\n\nThe performance of **random forests** is **significantly better** than multinomial logit.\n\n### Variable importance\n\n```{r, fig.width=20, fig.height=13, include = TRUE }\n######### variable importance\nres_importance_mean$variabili <- factor(res_importance_mean$variabili, levels = res_importance_mean$variabili[order(res_importance_mean$MeanDecreaseAccuracy, decreasing = FALSE)])\nimport_acc <- ggplot(res_importance_mean, aes(x=MeanDecreaseAccuracy, y=variabili)) +\n  geom_col() + \n  labs(y=\"\", x=\"Accuracy average decreasing\") +\n  theme(axis.text=element_text(size=17), axis.title = element_text(size = 20))\n\n\nres_importance_mean$variabili <- factor(res_importance_mean$variabili, levels = res_importance_mean$variabili[order(res_importance_mean$MeanDecreaseGini, decreasing = FALSE)])\nimport_gini <- ggplot(res_importance_mean, aes(x=MeanDecreaseGini, y=variabili)) +\n  geom_col() + \n  labs(y=\"\", x=\"Gini index average decreasing\") + \n  theme(axis.text=element_text(size=17), axis.title = element_text(size = 20))\n\nggarrange(import_acc, import_gini, ncol=2)\n\n\n```\n\nThe graph on the left shows, on average, how much the performance in terms of **accuracy** would decrease if we eliminated each variable, while the graph on the right shows how much the **Gini index** would decrease (on average) following the elimination of each variable (how pure are the nodes at the end of the tree without that particular variable).\n\nBoth measures are, therefore, indicative of the **importance** of the variable in **classifying the outcome** of the observations. One uses **performance** as a \"metric\", the other **node impurity**.\n\nIt can be seen that for the random forests the foundation year (**founded_at**) is the most important variable, while the multinomial logit considers this variable as significant, but with coefficients close to 0. Many of the variables found to be significant in the logit are also significant for the forests, such as **milestones**, **relationships**, **log_fund_tot**, which follow the foundation year in importance. Another contrasting result concerns the variables **investment_rounds** and **invested_companies**, which are considered significant in the logit (with some relatively high coefficients in absolute value) and at the bottom in importance in the random forests, both for accuracy and impourity. \n\n**fin_org_financed** and **num_acquisitions_made** rank high in the \"best performing\" variables in terms of accuracy, while having little impact on node impurity.\n\nThe geographical region (**macro_area**) and the market sector (**macro_sector**) are more important for the Gini index than for accuracy.\n\n# Conclusions and main findings\n\nIn this study it has been analyzed what influences the success of startups. In particular it was considered a sample of about **17,000 startups** founded **from 1902 to 2013**, on which some features have been measured. The goal, therefore, was to identify which of some of the characteristics found on the sample of startups had the greatest impact on the success of the latter over time considered. \n\nFor this purpose, a **multinomial logit** model and a **random forest** were estimated separately on the same sample. The second method performed better than the first on the classification of observations, but also more difficult to interpret, as it is able to express only the impact of covariates on the response variable and not on the individual classes of the latter. In other words, it shows the variables that most discriminate the observations in the different *status* of the company, but not if these variables increase or decrease the probability of success. Furthermore, the **importance interpretation** of the variables is not unique, as it is evaluated with two metrics concerning different aspects, **impurity** and **accuracy**. Some variables are therefore more impactful for one metric and less for the other.\n\nThe multinomial logit, on the other hand, uniquely provides the numerical estimate of the single regression coefficients for each variable and for each class of the response variable. Thus it is possible give a numerical, and therefore **more precise**, **interpretation** of each covariate impact on probability of the single outcome classes. \n\nThe results of the estimation of the two models present **some contradictions**, such as the importance attributed to the startup's ***foundation date***, considered the most important variable from the random forest estimation but whit coefficients resulting from logit close to 0, even though significant. \nThe same contraddiction regards the variable associated with the ***amount of funding received from Venture Capital funds***, non-significant for the logit, but in the first seven variables for importance in the random forest. The number of ***funding rounds*** in which a company participate and the number of companies funded are not important for the random forest but have a positive impact on the logit, while the number of ***acquisitions*** made has a positive impact on the logit, and important in terms of decrease in impurity, but not in accuracy, for the random forest. \n\nBoth the models, on the other hand, lead to the **same conclusions** regarding the positive impact of the ***total amount of received funds***. This result is not particularly surprising, since it is obvious that a startup with more economic resources has an advantage. The ***number of funding rounds*** that a startup has gone through is considered quite important for both models, while the amount received during each single round is not.\n\nAn interesting aspect concerns the number of ***milestones*** achieved and the number of ***relationships*** with external entities, both of which had a positive impact on business success. The first can\nbe due to the fact that setting intermediate goals and achieving them is a demonstration of organization, perseverance and other positive qualities that induce investors to finance the company, while the latter can be caused by a consequent easier influx of resources, either economic, or in terms of knowledge and know-how; but it highlights the fact above all that the startups included in contexts of collaboration and interaction with other entities, are more successful than the more ‚Äúisolated‚Äù companies. In addition, the ***geographic region*** and the ***market sector*** have an impact for both models.","metadata":{"_uuid":"24022ce8-a86f-49e6-962e-8140d6c31d6f","_cell_guid":"95053235-beda-4df0-9763-0d58b4145dda","collapsed":false,"jupyter":{"outputs_hidden":false},"execution":{"iopub.status.busy":"2023-11-08T09:34:15.879825Z","iopub.execute_input":"2023-11-08T09:34:15.882029Z","iopub.status.idle":"2023-11-08T09:34:16.002393Z"},"trusted":true},"outputs":[{"ename":"ERROR","evalue":"Error in parse(text = x, srcfile = src): <text>:10:6: unexpected symbol\n9: \n10: This project\n         ^\n","traceback":["Error in parse(text = x, srcfile = src): <text>:10:6: unexpected symbol\n9: \n10: This project\n         ^\nTraceback:\n"],"output_type":"error"}],"execution_count":1}]}